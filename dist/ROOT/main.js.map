{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/customer/create-customer.component.css","webpack:///./src/app/customer/create-customer.component.html","webpack:///./src/app/customer/create-customer.component.ts","webpack:///./src/app/customer/customer-details.component.css","webpack:///./src/app/customer/customer-details.component.html","webpack:///./src/app/customer/customer-details.component.ts","webpack:///./src/app/customer/customer-list.component.css","webpack:///./src/app/customer/customer-list.component.html","webpack:///./src/app/customer/customer-list.component.ts","webpack:///./src/app/dashboard/loan-payment-dashboard/loan-payment-dashboard.component.css","webpack:///./src/app/dashboard/loan-payment-dashboard/loan-payment-dashboard.component.html","webpack:///./src/app/dashboard/loan-payment-dashboard/loan-payment-dashboard.component.ts","webpack:///./src/app/dashboard/order-dashboard/order-dashboard.component.css","webpack:///./src/app/dashboard/order-dashboard/order-dashboard.component.html","webpack:///./src/app/dashboard/order-dashboard/order-dashboard.component.ts","webpack:///./src/app/dashboard/order-payment-dashboard/order-payment-dashboard.component.css","webpack:///./src/app/dashboard/order-payment-dashboard/order-payment-dashboard.component.html","webpack:///./src/app/dashboard/order-payment-dashboard/order-payment-dashboard.component.ts","webpack:///./src/app/home/home-page.component.css","webpack:///./src/app/home/home-page.component.html","webpack:///./src/app/home/home-page.component.ts","webpack:///./src/app/loan/create-loan.component.css","webpack:///./src/app/loan/create-loan.component.html","webpack:///./src/app/loan/create-loan.component.ts","webpack:///./src/app/loan/customer-loan-detail.component.css","webpack:///./src/app/loan/customer-loan-detail.component.html","webpack:///./src/app/loan/customer-loan-detail.component.ts","webpack:///./src/app/loan/loan-detail/loan-detail.component.css","webpack:///./src/app/loan/loan-detail/loan-detail.component.html","webpack:///./src/app/loan/loan-detail/loan-detail.component.ts","webpack:///./src/app/loan/loan-details-edit/loan-details-edit.component.css","webpack:///./src/app/loan/loan-details-edit/loan-details-edit.component.html","webpack:///./src/app/loan/loan-details-edit/loan-details-edit.component.ts","webpack:///./src/app/loan/loan-list.component.css","webpack:///./src/app/loan/loan-list.component.html","webpack:///./src/app/loan/loan-list.component.ts","webpack:///./src/app/loan/partial-payment.component.css","webpack:///./src/app/loan/partial-payment.component.html","webpack:///./src/app/loan/partial-payment.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/items.model.ts","webpack:///./src/app/orders/create-order/create-order.component.css","webpack:///./src/app/orders/create-order/create-order.component.html","webpack:///./src/app/orders/create-order/create-order.component.ts","webpack:///./src/app/orders/order-details-edit/order-details-edit.component.css","webpack:///./src/app/orders/order-details-edit/order-details-edit.component.html","webpack:///./src/app/orders/order-details-edit/order-details-edit.component.ts","webpack:///./src/app/orders/order-details/order-details.component.css","webpack:///./src/app/orders/order-details/order-details.component.html","webpack:///./src/app/orders/order-details/order-details.component.ts","webpack:///./src/app/orders/order-item-details/order-item-details.component.css","webpack:///./src/app/orders/order-item-details/order-item-details.component.html","webpack:///./src/app/orders/order-item-details/order-item-details.component.ts","webpack:///./src/app/orders/order-list/order-list.component.css","webpack:///./src/app/orders/order-list/order-list.component.html","webpack:///./src/app/orders/order-list/order-list.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/customer.service.ts","webpack:///./src/app/services/loan.service.ts","webpack:///./src/app/services/order.service.ts","webpack:///./src/app/services/pagerService.service.ts","webpack:///./src/app/util/date-picker/date-picker.component.html","webpack:///./src/app/util/date-picker/date-picker.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<script src=\\\"node_modules/chart.js/src/chart.js\\\"></script>\\n<script src=\\\"node_modules/chart.js/dist/Chart.bundle.min.js\\\"></script>\\n\\n              \\n    <nav class=\\\"navbar navbar-expand-lg navbar-light navbar-bg-primary\\\" >\\n        <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"nav-item\\\" >\\n                        <a class=\\\"nav-link\\\" id=\\\"customerList-tab\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/home\\\"\\n                        routerLinkActive=\\\"active\\\">\\n                             <span class=\\\"glyphicon glyphicon-home\\\" ></span> Home</a>\\n                    </li>\\n\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n                            <a class=\\\"nav-link\\\" id=\\\"orderList-tab\\\" data-toggle=\\\"tab\\\" routerLink=\\\"dashboard\\\">\\n                                <span class=\\\"glyphicon glyphicon-dashboard\\\"></span> Dashboard</a>\\n            </li>\\n                    \\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" id=\\\"customerList-tab\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/customerList\\\"\\n                routerLinkActive=\\\"active\\\">\\n                     <span class=\\\"glyphicon glyphicon-list\\\" ></span> Customer List</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" id=\\\"createCustomer-tab\\\" data-toggle=\\\"tab\\\" routerLink=\\\"/createCustomer\\\"\\n                routerLinkActive=\\\"active\\\">\\n                    <span class=\\\"glyphicon glyphicon-plus\\\"></span> Create Customer</a>\\n            </li>\\n            \\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" id=\\\"loanList-tab\\\" data-toggle=\\\"tab\\\" routerLink=\\\"loanList\\\">\\n                    <span class=\\\"glyphicon glyphicon-list\\\"></span> Loan List</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" id=\\\"orderList-tab\\\" data-toggle=\\\"tab\\\" routerLink=\\\"orderList\\\">\\n                    <span class=\\\"glyphicon glyphicon-list\\\"></span> Order List</a>\\n            </li>\\n\\n            <li class=\\\"navbar-nav\\\" style=\\\"float: right;\\\" >\\n                    <a class=\\\"nav-link\\\"  *ngIf=\\\"!_authService.loggedIn()\\\" style=\\\"cursor:pointer\\\" routerLink=\\\"/login\\\"\\n                     routerLinkActive=\\\"active\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Login</a>\\n                \\n            </li>\\n            \\n           \\n            <li class=\\\"navbar-nav\\\" style=\\\"float: right;\\\"  >\\n                    <a class=\\\"nav-link\\\"  style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\"\\n                    (click)=\\\"_authService.logoutUser()\\\"  >\\n                       <span class=\\\"glyphicon glyphicon-off\\\"></span> Logout</a>         \\n            </li>\\n            <li class=\\\"navbar-nav\\\" style=\\\"float: right;\\\" *ngIf=\\\"_authService.loggedIn()\\\" >\\n                <a class=\\\"nav-link\\\"  >\\n                   <span class=\\\"glyphicon glyphicon-user\\\"></span> Welcome {{_authService.getUserName()}}</a>         \\n            </li>\\n\\n           \\n        </ul>\\n        \\n    </nav>\\n    \\n    <div class=\\\"container\\\">\\n            <router-outlet></router-outlet>            \\n    </div>\\n\\n    \\n   \\n\\n\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ShoppingApp';\n  constructor(public _authService: AuthService){}\n\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\n\n\n\n\n \n\n\n\nimport { AppComponent } from './app.component';\nimport { CustomerListComponent } from './customer/customer-list.component';\nimport { CreateCustomerComponent } from './customer/create-customer.component';\nimport {CustomerService} from './services/customer.service';\nimport { LoanListComponent } from './loan/loan-list.component';\nimport { LoanService } from './services/loan.service';\nimport { CreateLoanComponent } from './loan/create-loan.component';\n\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgbPaginationModule, NgbAlertModule} from '@ng-bootstrap/ng-bootstrap';\nimport { DatePickerComponent } from './util/date-picker/date-picker.component';\nimport { LoanDetailComponent } from './loan/loan-detail/loan-detail.component';\nimport { CustomerLoanDetailComponent } from './loan/customer-loan-detail.component';\nimport { HomePageComponent } from './home/home-page.component';\nimport { CustomerDetailsComponent } from './customer/customer-details.component';\nimport { LoginComponent } from './login/login.component';\nimport {AuthGuard} from './auth/auth.guard';\nimport {AuthService} from './services/auth.service';\nimport { PartialPaymentComponent } from './loan/partial-payment.component';\nimport { OrderListComponent } from './orders/order-list/order-list.component';\nimport { OrderDetailsComponent } from './orders/order-details/order-details.component';\nimport { CreateOrderComponent } from './orders/create-order/create-order.component';\nimport { OrderDashboardComponent } from './dashboard/order-dashboard/order-dashboard.component';\n\nimport { OrderPaymentDashboardComponent } from './dashboard/order-payment-dashboard/order-payment-dashboard.component';\nimport { LoanPaymentDashboardComponent } from './dashboard/loan-payment-dashboard/loan-payment-dashboard.component';\nimport { OrderItemDetailsComponent } from './orders/order-item-details/order-item-details.component';\nimport { LoanDetailsEditComponent } from './loan/loan-details-edit/loan-details-edit.component';\nimport { OrderDetailsEditComponent } from './orders/order-details-edit/order-details-edit.component';\n\n\n\n\nconst appRoutes : Routes = [\n{path: 'customerList' , component :CustomerListComponent, canActivate : [AuthGuard] },\n{path: 'createCustomer', component: CreateCustomerComponent, canActivate : [AuthGuard] },\n{path: 'loanList', component: LoanListComponent, canActivate : [AuthGuard] },\n{path: 'createLoan/:customerId', component : CreateLoanComponent, canActivate : [AuthGuard] },\n{path: 'loanDetail/:id', component: LoanDetailComponent, canActivate : [AuthGuard] },\n{path: 'editLoanDetail/:id', component: LoanDetailsEditComponent, canActivate : [AuthGuard] },\n{path: 'customerLoanDetail/:id', component: CustomerLoanDetailComponent, canActivate : [AuthGuard] },\n{path: 'customerDetails/:id', component: CustomerDetailsComponent, canActivate : [AuthGuard] },\n{path: 'login', component: LoginComponent},\n{path: 'home', component: HomePageComponent},\n{path: 'orderDetails/:id', component : OrderDetailsComponent},\n{path: 'editOrderDetails/:id', component : OrderDetailsEditComponent},\n{path: 'createOrder/:cutomerId', component : CreateOrderComponent},\n{path: 'orderList', component: OrderListComponent},\n{path: 'dashboard', component: OrderDashboardComponent},\n{path: 'orderItemDetails', component:OrderItemDetailsComponent},\n\n{path: '', redirectTo: '/home', pathMatch: 'full'}\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerListComponent,\n    CreateCustomerComponent,\n    LoanListComponent,\n    CreateLoanComponent,\n    DatePickerComponent,\n    LoanDetailComponent,\n    CustomerLoanDetailComponent,\n    HomePageComponent,\n    CustomerDetailsComponent,\n    LoginComponent,\n    PartialPaymentComponent,\n    OrderListComponent,\n    OrderDetailsComponent,\n    CreateOrderComponent,\n    OrderDashboardComponent,\n  \n    OrderPaymentDashboardComponent,\n    LoanPaymentDashboardComponent,\n    OrderItemDetailsComponent,\n    LoanDetailsEditComponent,\n    OrderDetailsEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbPaginationModule,\n    NgbAlertModule,\n    FormsModule,\n    HttpModule,\n    ChartsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes, { useHash: true }),\n    NgbModule.forRoot(),\n    \n  \n  ],\n  providers: [AuthService, CustomerService, LoanService, AuthGuard ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  model;\n\n }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _authService : AuthService\n              , private _router : Router){\n\n  }\n\n  canActivate():  boolean {\n    if(this._authService.loggedIn()){\n        return true;\n    }else{\n      this._router.navigate(['login']);\n      return true;\n    }\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<form #employeeForm=\\\"ngForm\\\"   (ngSubmit)=\\\"saveCustomer(customer)\\\" >\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Create Customer</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"fullName.invalid && fullName.touched\\\">\\n            <label for=\\\"fullName\\\" class=\\\"control-label\\\">Customer Name</label>\\n            <input  id=\\\"fullName\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n                    name=\\\"fullName\\\"  maxlength=\\\"20\\\" [(ngModel)]=\\\"customer.fullName\\\"\\n                    #fullName=\\\"ngModel\\\">\\n                   <span class=\\\"help-block\\\" *ngIf=\\\"fullName.invalid && fullName.touched\\\">\\n                        Please enter customer name\\n                   </span>\\n          </div>\\n\\n      \\n\\n      \\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"fatherName.invalid && fatherName.touched\\\">\\n        <label for=\\\"fatherName\\\" class=\\\"control-label\\\">Father's Name</label>\\n        <input  id=\\\"fatherName\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n               name=\\\"fatherName\\\" [(ngModel)]=\\\"customer.fatherName\\\"\\n               #fatherName=\\\"ngModel\\\">\\n               <span class=\\\"help-block\\\" *ngIf=\\\"fatherName.invalid && fatherName.touched\\\">\\n                    Please enter Father's name\\n               </span>\\n      </div>\\n\\n      <!-- <div class=\\\"form-group\\\" [class.has-error]=\\\"email.invalid && email.touched\\\">\\n        <label for=\\\"email\\\" class=\\\"control-label\\\">Email</label>\\n        <input id=\\\"email\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\"\\n                [(ngModel)]=\\\"customer.email\\\" #email=\\\"ngModel\\\">\\n        <span class=\\\"help-block\\\" *ngIf=\\\"email.invalid && email.touched\\\">\\n          Email is required\\n        </span>\\n      </div> -->\\n      <div class=\\\"form-group\\\">\\n        <label>Gender</label>\\n        <div class=\\\"form-control\\\">\\n          <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"male\\\" [(ngModel)]=\\\"customer.gender\\\">\\n            Male\\n          </label>\\n          <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"female\\\" [(ngModel)]=\\\"customer.gender\\\">\\n            Female\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"phone.touched && phone.invalid\\\">\\n          <label for=\\\"phone\\\"  class=\\\"control-label\\\"><span class=\\\"glyphicon glyphicon-phone\\\" ></span> Phone</label>\\n          <input id=\\\"phone\\\" required maxlength=\\\"10\\\" numbers-only type=\\\"text\\\"   class=\\\"form-control\\\"\\n                 name=\\\"phone\\\" [(ngModel)]=\\\"customer.phone\\\" (keypress)=\\\"numberOnly($event)\\\"  #phone=\\\"ngModel\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"phone.touched && phone.invalid\\\">\\n                   Please enter phone number\\n                 </span>\\n                 \\n                \\n        </div>\\n       <div class=\\\"form-group\\\" [class.has-error]=\\\"city.touched && city.invalid\\\">\\n          <label for=\\\"city\\\" class=\\\"control-label\\\">City</label>\\n          <input id=\\\"city\\\" required type=\\\"text\\\" class=\\\"form-control\\\"\\n                 name=\\\"city\\\" [(ngModel)]=\\\"customer.city\\\" #city=\\\"ngModel\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"city.touched && city.invalid\\\">\\n                   Please enter city name\\n                 </span>\\n        </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"address\\\">Address</label>\\n          <input id=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                 name=\\\"address\\\" [(ngModel)]=\\\"customer.address\\\">\\n        </div>\\n\\n\\n\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n    </div>\\n   <!--  <div class=\\\"text-success\\\" *ngIf=\\\"success_msg\\\">\\n       <h3>{{success_msg}}</h3> \\n      </div> -->\\n  \\n   <!--  <div *ngIf=\\\"success_response\\\"  class=\\\"alert alert-success alert-dismissible\\\" role=\\\"alert\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n        <strong>Congratulations!</strong> {{success_response}}\\n        Clik <a routerLink=\\\"/customerList\\\" routerLinkActive=\\\"active\\\" class=\\\"alert-link\\\">here </a>to See All Customers\\n    </div> -->\\n    <div *ngIf=\\\"validationError\\\"  class=\\\"alert alert-danger\\\" >\\n     \\n         {{validationError}}\\n     \\n  </div>\\n <!--  <div class=\\\"text-danger\\\" *ngIf=\\\"errorResponse\\\">\\n    {{errorResponse}}\\n  </div> -->\\n \\n  \\n    \\n  </div>\\n</form> \\n\\n\\n<div class=\\\"modal \\\" tabindex=\\\"-1\\\" id=\\\"confirmationModal\\\"\\n  data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" [ngStyle]=\\\"{'display':getDisplayObject()}\\\" >\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n  <div class=\\\"modal-content\\\">\\n        \\n                <div class=\\\"modal-header\\\">\\n          \\n                        <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                            &times;\\n                        </button>\\n                        <h4 class=\\\"modal-title\\\">Create Customer Status</h4>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <div class=\\\"text-success\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"success_msg\\\"> \\n                            <h4>{{success_msg}}</h4> </div>\\n                           \\n                        <div class=\\\"text-error\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"errorResponse\\\">\\n                             <h4>{{errorResponse}}</h4></div>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"btn btn-info\\\" >Create one more Customer</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                        (click)=\\\"dismissModalAndRedirect()\\\"   data-dismiss=\\\"modal\\\">Go to Customer List</button>\\n                    </div>\\n            \\n         \\n      \\n      \\n  </div>\\n</div>\\n</div> \"","import { Component, OnInit } from '@angular/core';\nimport {NgForm, FormControl, Validators, FormGroup} from '@angular/forms';\nimport {Customer} from '../models/customer.model';\nimport {Router} from '@angular/router';\nimport { JsonPipe } from '@angular/common';\nimport { CustomerService } from '../services/customer.service';\n\n\n\n\n@Component({\n  selector: 'app-create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.css']\n  \n})\n\n\nexport class CreateCustomerComponent implements OnInit {\n\n  \n  displayModalObject : string = 'none';\n  success_response;\n  success_msg;\n  errorResponse;\n  validationError;\n  customer : Customer = {\n    id :null,\n    fullName : null,\n    fatherName : null,\n    phone : null,\n    address : null,\n    city : null,\n    gender : null,\n    photoPath : null,\n    status: null\n  };\n\n  constructor(private _customerService : CustomerService\n    , private _router : Router) {}\n\n  ngOnInit() {\n\n    \n  }\n\n   saveCustomer(customer :Customer): void {\n    this.success_response = null;\n    this.errorResponse = null;\n    if(!this.validateCustomerData(customer)){\n      //this.validationError='Please enter all required details.';\n      //console.log('validationError: '+this.validationError);\n      console.log('required customer details are not present');\n      return ;\n    }\n    this.validationError= null;\n    console.log(customer);\n    this._customerService.saveCustomer(customer)\n                          .subscribe(\n                            \n                             \n                              res => {\n                              \n                                if(res != null){\n                                  \n                                  if(res.status == 'SUCCESS'){\n                                   \n                                    this.success_response = 'Customer Added Successfully.';\n                                    this.success_msg = 'Customer Added Successfully.';\n                                    this.displayModalObject = 'block';\n                                   \n                                  }else{\n                                    this.errorResponse = \"An Error occurred while processing your request. Please try again later.\";\n                                    console.log(this.errorResponse);\n                                  }\n                                }\n                              \n                              },\n                              err => {\n                                this.errorResponse = JSON.stringify(err);  \n                                console.log(err)\n                              }\n                          \n                          )\n  }\n\n  validateCustomerData(customer : Customer) : boolean {\n    if(customer == null){\n      this.validationError='Please enter customer details';\n      return false;\n    }\n\n     if(customer.fullName == null || customer.fullName == ''){\n      this.validationError='Please enter fullName name';\n      return false;\n    }\n\n    if(customer.fatherName == null || customer.fatherName == ''){\n      console.log(\"invalid fatherName\"); \n      this.validationError='Please enter father name';\n      return false;\n    }\n    if(customer.city == null || customer.city == ''){\n      this.validationError='Please enter city name';\n      console.log(\"invalid city\");\n      return false;\n    }\n\n    if(customer.address == null || customer.address == ''){\n      console.log(\"invalid address\");\n      this.validationError='Please enter address';\n      return false;\n    }\n   \n    \n    if(customer.phone == null || customer.phone == ''){\n      console.log(\"invalid phone\");\n      this.validationError='Please enter phone';\n      return false;\n\n    }\n\n    if(customer.phone.length < 10){\n      console.log(\"invalid phone length\");\n      this.validationError='Please enter phone number of 10 digits';\n      return false;\n      \n    }\n\n    if(customer.gender == null || customer.gender == ''){\n      console.log(\"invalid gender \");\n      this.validationError='Please select gender';\n      return false;\n    }\n    return true;\n  }\n\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n\n\n  getDisplayObject() {\n   \n    return this.displayModalObject;\n\n }\n\n dismissModal()  {\n   this.displayModalObject = 'none';\n\n   return this.displayModalObject;\n }\n\n dismissModalAndRedirect(){\n   this._router.navigate(['/customerList'])\n }\n\n}\n","module.exports = \"\"","module.exports = \"\\n <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Customer Details</h3>\\n    </div>\\n   \\n    <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-bordered table-hover table-condensed\\\">\\n        <tbody > \\n         <tr>\\n            <td>customer Id</td>\\n            <td class=\\\"text-primary\\\"> {{customerDetail.id}}</td>\\n          </tr> \\n          <tr>\\n              <td>Name</td>\\n              <td class=\\\"text-primary\\\"> {{customerDetail.fullName}}</td>\\n            </tr>\\n            <tr>\\n                    <td>Father's Name</td>\\n                    <td class=\\\"text-primary\\\"> {{customerDetail.fatherName}}</td>\\n            </tr>\\n          <tr>\\n              <td>Gender</td>\\n              <td class=\\\"text-primary\\\"> {{customerDetail.gender }}</td>\\n          </tr>\\n           \\n          <tr>\\n              <td>Phone</td>\\n              <td class=\\\"text-primary\\\"> {{customerDetail.phone }}</td>\\n          </tr>\\n          <tr>  \\n            <td>City</td>\\n            <td class=\\\"text-primary\\\"> {{customerDetail.city}}</td>\\n        </tr>\\n        <tr>  \\n            <td>Address</td>\\n            <td class=\\\"text-primary\\\"> {{customerDetail.address}}</td>\\n        </tr>\\n        <tr>  \\n            <td>Status</td>\\n            <td class=\\\"text-primary\\\"> {{customerDetail.status }}</td>\\n        </tr>\\n        \\n\\n        </tbody>\\n        </table>\\n    </div>\\n\\n\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { CustomerService } from '../services/customer.service';\nimport {Customer} from '../models/customer.model';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  customerDetail : Customer;\n\n  constructor(private _activatedRoute : ActivatedRoute\n    ,private _customerService : CustomerService) { }\n\n  ngOnInit() {\n   let custId = this._activatedRoute.snapshot.paramMap.get(\"id\");\n   this._customerService.getCustomerDetailsById(custId)\n   .subscribe((customerData) => {\n   \n     this.customerDetail = customerData\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n\\n  <div style=\\\"float: right;\\\">\\n    <form #searchEmployeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"searchCustomer(searchString)\\\">\\n      <table class=\\\"table-condensed\\\">\\n        <tr>\\n          <td>\\n            <div style=\\\"color:aquamarine\\\" *ngIf=\\\"filterInfo\\\">Showing result with filter : {{searchString}} </div>\\n          </td>\\n          <td style=\\\"cursor: pointer;\\\">\\n            <div style=\\\"color:rgb(222, 224, 236)\\\" *ngIf=\\\"filterInfo\\\" (click)=clearFilter()>\\n              <span id=\\\"searchclear\\\" class=\\\"glyphicon glyphicon-remove-circle\\\"> </span>Clear Filter </div>\\n          </td>\\n\\n          <td>\\n            <div class=\\\"text-danger\\\" class=\\\"bg-danger\\\" *ngIf=\\\"emptySearchString\\\"> {{emptySearchString}} </div>\\n          </td>\\n          <td class=\\\"mx-auto\\\">\\n            <div>\\n              <input type=\\\"text\\\" name=\\\"searchString\\\" required placeholder=\\\"Search Customers\\\" [(ngModel)]=\\\"searchString\\\">\\n            </div>\\n\\n          </td>\\n\\n          <td>\\n            <button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">Search</button>\\n          </td>\\n\\n        </tr>\\n      </table>\\n    </form>\\n  </div>\\n\\n  \\n\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">Customer List : <strong style=\\\"color:aquamarine\\\"> {{totalRecords}} records found</strong>\\n    </h3>\\n\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <table class=\\\"table table-striped table-bordered table-hover table-condensed\\n       table-responsive \\\">\\n      <thead>\\n        <th>Id</th>\\n        <th>Name</th>\\n        <th>Father's Name</th>\\n        <th>Phone</th>\\n        <th>Address</th>\\n        <th>City</th>\\n        <th>Details</th>\\n        <th>New Loan</th>\\n        <th>New Order</th>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let customer of customerList\\\">\\n          <td style=\\\"word-break:break-all;\\\"> {{customer.id}}</td>\\n          <td style=\\\"word-break:break-all;\\\" class=\\\"text-primary\\\">\\n            <a routerLink=\\\"//customerDetails/{{customer.id}}\\\" routerLinkActive=\\\"active\\\"> {{customer.fullName}}</a></td>\\n            <td style=\\\"word-break:break-all;\\\"> {{customer.fatherName}}</td>\\n          <td style=\\\"word-break:break-all;\\\"> {{customer.phone}}</td>\\n          <td style=\\\"word-break:break-all;\\\"> {{customer.address}}</td>\\n          <td style=\\\"word-break:break-all;\\\"> {{customer.city}}</td>\\n          <td style=\\\"cursor: pointer; word-break:break-all;\\\">\\n            <div class=\\\"text-primary\\\" (click)=fetchLoanDetails(customer.id,customer.fullName)>\\n              <span class=\\\"glyphicon glyphicon-credit-card\\\"></span> Details </div>\\n          </td>\\n          <td style=\\\"cursor: pointer; word-break:break-all;\\\">\\n            <div class=\\\"text-primary\\\" (click)=createCustomerLoan(customer.id,customer.fullName)>\\n              <span class=\\\"glyphicon glyphicon-plus\\\"></span>New Loan </div>\\n          </td>\\n          <td style=\\\"cursor: pointer;\\\">\\n            <div class=\\\"text-primary\\\" (click)=createOrderForCustomer(customer.id,customer.fullName)>\\n              <span class=\\\"glyphicon glyphicon-plus\\\"></span> Create Order </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n\\n    </table>\\n    <!-- pager -->\\n    <div>\\n      <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(1)\\\">First</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\n        </li>\\n        <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n          <a (click)=\\\"setPage(page)\\\">{{page}}</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\n        </li>\\n        <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n          <a (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"noSearchResultFound\\\" class=\\\"text-info align-items-center\\\">\\n    <h4>{{noSearchResultFound}} </h4>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Customer} from '../models/customer.model';\nimport { CustomerService } from '../services/customer.service';\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {PagerService} from '../services/pagerService.service';\n\n@Component({\n  \n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css'],\n  providers:[CustomerService]\n})\nexport class CustomerListComponent implements OnInit {\n\n customerList: Customer[] ;\n errorResponseOnSearch;\n noSearchResultFound;\n emptySearchString;\n searchString;\n filterInfo: boolean;\n errorResponse;\n totalRecords;\n perPage;\n \n currentPage = 1;\n  // pager object\n  pager: any = {};\n\n  // paged items\n  pagedItems: any[];\n\n\n\n  constructor(private _customerService : CustomerService\n              , private _router : Router\n              , private pagerService: PagerService) { \n    \n  }\n\n  ngOnInit() {\n    \n   if(this.currentPage == 1){\n    this.getCustomerList(this.currentPage, 10);\n   } \n \n  }\n\n  getCustomerList(pageNumber : number, perPage : number){\n    console.log(\"Invoking getCustomerList for Page \"+ pageNumber +\" perPage : \"+perPage);\n    this._customerService.getCustomersWithPagination(pageNumber, perPage).subscribe(\n      res => {\n        console.log(res);\n        if(res != null){\n          \n          if(res.status == 'SUCCESS'){\n            this.customerList = res.data;\n            this.totalRecords = res.totalCount;\n            console.log('totalRecords is '+this.totalRecords)\n            this.perPage = res.perPage;\n            // initialize to page 1\n            this.setPageOnLoad(res.pageNumber, res.totalCount);\n          }else{\n            this.errorResponse = res.message;\n          }\n        }\n       \n      },\n      err => {\n        this.errorResponse = JSON.stringify(err.message);\n        console.log(err)\n      }\n  \n     )\n  }\n\n  setPageOnLoad(page: number, totalCount : number) {\n    if (page < 1 || page > this.pager.totalPages) {\n        return;\n    }\n\n    // get pager object from service\n    this.pager = this.pagerService.getPager(totalCount, page, this.perPage);\n    this.currentPage = page;\n    //console.log('Current page is : '+page);\n    // get current page of items\n    this.pagedItems = this.customerList.slice(this.pager.startIndex, this.pager.endIndex + 1);\n}\n  \n  setPage(page: number) {\n    if (page < 1 || page > this.pager.totalPages) {\n        return;\n    }\n\n    // get pager object from service\n    this.pager = this.pagerService.getPager(this.totalRecords, page, this.perPage);\n    this.currentPage = page;\n    //console.log('Current page is : '+page);\n    // get current page of items\n   //if(page != 1){\n      this.getCustomerList(page, 10);\n   // }\n    \n    this.pagedItems = this.customerList.slice(this.pager.startIndex, this.pager.endIndex + 1);\n}\n\n  createCustomerLoan(custId, name){\n    this._router.navigate(['/createLoan', custId+'-'+name]);\n  }\n\n  fetchLoanDetails(id, name){\n    this._router.navigate(['/customerLoanDetail', id+'-'+name]);\n  }\n\n\n\n  searchCustomer(searchString : string){\n    if(searchString == null || searchString ==''){\n      this.emptySearchString = \"Please enter any name to search.\"\n\n      return;\n    }\n    this.emptySearchString = null;\n    this._customerService.searchCustomers(searchString, 1, 10).subscribe(\n      \n      res => {\n        console.log(res);\n        if(res != null){\n          \n          if(res.status == 'SUCCESS'){\n            this.customerList = res.data;\n            this.totalRecords = res.totalCount;\n            this.noSearchResultFound = null;\n            this.filterInfo = true;\n            this.perPage = res.perPage;\n            // initialize to page 1\n            this.setPageOnLoad(res.pageNumber, res.totalCount);\n          }else{\n            this.errorResponse = res.message;\n          }\n        }\n       \n      },\n      err => {\n        this.errorResponseOnSearch = JSON.stringify(err);  \n        console.log(err)\n      }\n\n    )\n   \n    \n  }\n\n  /* To clear serch filters*/\n  clearFilter(){\n    this.getCustomerList(this.currentPage, 10);\n    this.searchString = null;\n    this.filterInfo = false;\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n     throw error;\n  };\n\n  createOrderForCustomer(custId, custName){\n    this._router.navigate(['/createOrder', custId+'-'+custName]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div >\\n      <div > &nbsp; &nbsp; Total income from orders this year :  \\n        <strong>{{totalIncomeFromLoans| currency:'INR':'symbol':'4.2-2' }} </strong> \\n      </div>\\n    <div style=\\\"display: block;\\\">\\n    <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [legend]=\\\"lineChartLegend\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n    </div>\\n  </div>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loan-payment-dashboard',\n  templateUrl: './loan-payment-dashboard.component.html',\n  styleUrls: ['./loan-payment-dashboard.component.css']\n})\nexport class LoanPaymentDashboardComponent implements OnInit {\n  totalIncomeFromLoans = '86900';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public lineChartData:Array<any> = [\n    {data: [10200, 12500, 9300, 8800, 6900, 7500, 8520, 6800, 7350, 9030], label: 'Monthly Income from loans '},\n    \n  ];\n  public lineChartLabels:Array<any> = ['January', 'February', 'March', 'April'\n                                      , 'May', 'June', 'July', 'August','September','October'];\n  public lineChartOptions:any = {\n    responsive: true\n  };\n  public lineChartColors:Array<any> = [\n    { // grey\n      backgroundColor: '#F9BC8F',\n      borderColor: '#772F01',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n  ];\n  public lineChartLegend:boolean = true;\n  public lineChartType:string = 'line';\n\n  // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n \n  public chartHovered(e:any):void {\n    console.log(e);\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"panel panel-primary\\\"  >\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Income Details Monthly</h3>\\n        </div>\\n        \\n        \\n        <div class=\\\"panel-body\\\">\\n            <table class=\\\"table  table-responsive table-bordered table-hover\\\">\\n      \\n                <tr>\\n                    <td class=\\\"col-md-6\\\" >\\n                        <div >\\n           \\n                            <app-order-payment-dashboard></app-order-payment-dashboard>\\n                          </div>\\n                    </td>\\n                    <td class=\\\"col-md-6\\\" >\\n                        <div >\\n           \\n                            <app-loan-payment-dashboard></app-loan-payment-dashboard>\\n                          </div>\\n                    </td>\\n          \\n                    \\n                   </tr>\\n              </table>\\n      \\n        </div>\\n      </div>\\n\\n\\n\\n\\n\\n<div class=\\\"panel panel-primary\\\"  >\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Order placed details for year 2017 & 2018</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n        <table class=\\\"table  table-responsive table-bordered table-hover\\\">\\n  \\n            <tr>\\n                <td class=\\\"col-md-12\\\" >\\n                    <div >\\n       \\n                        <canvas baseChart\\n                                    [datasets]=\\\"lineChartDataForOrders\\\"\\n                                    [labels]=\\\"lineChartLabels\\\"\\n                                   \\n                                    [chartType]=\\\"lineChartType\\\"\\n                                    (chartHover)=\\\"chartHovered($event)\\\"\\n                                    (chartClick)=\\\"chartClicked($event)\\\"\\n                                    [legend]=\\\"true\\\"\\n                                   \\n                                    ></canvas>\\n                      </div>\\n                </td>\\n      \\n                \\n               </tr>\\n          </table>\\n  \\n    </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"panel panel-primary\\\"  >\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Loans placed details for year 2017 & 2018</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <table class=\\\"table  table-responsive table-bordered table-hover\\\">\\n    \\n              <tr>\\n                  <td class=\\\"col-md-12\\\" >\\n                      <div >\\n         \\n                          <canvas baseChart\\n                                      [datasets]=\\\"lineChartDataForLoans\\\"\\n                                      [labels]=\\\"lineChartLabels\\\"\\n                                     \\n                                      [chartType]=\\\"lineChartType\\\"\\n                                      (chartHover)=\\\"chartHovered($event)\\\"\\n                                      (chartClick)=\\\"chartClicked($event)\\\"\\n                                      [legend]=\\\"true\\\"\\n                                      [colors]=\\\"lineChartColors\\\"\\n                                     \\n                                      ></canvas>\\n                        </div>\\n                  </td>\\n        \\n                  \\n                 </tr>\\n            </table>\\n    \\n      </div>\\n    </div>\\n\\n\\n\\n    \\n    <div class=\\\"panel panel-primary\\\"  >\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Customer Breakup Details</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <table class=\\\"table  table-responsive table-bordered table-hover\\\">\\n      \\n              <tr>\\n                <td class=\\\"col-md-12\\\">\\n                    <div style=\\\"display: block\\\">\\n                        <canvas baseChart\\n                                [data]=\\\"pieChartData\\\"\\n                                [labels]=\\\"pieChartLabels\\\"\\n                                [chartType]=\\\"pieChartType\\\"\\n                                (chartHover)=\\\"chartHovered($event)\\\"\\n                                (chartClick)=\\\"chartClicked($event)\\\">\\n                        </canvas>\\n                      </div>\\n                </td>\\n                \\n              </tr>\\n              </table>\\n      \\n        </div>\\n      </div>\\n    \\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-dashboard',\n  templateUrl: './order-dashboard.component.html',\n  styleUrls: ['./order-dashboard.component.css']\n})\nexport class OrderDashboardComponent implements OnInit {\n\n  \n  \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public pieChartLabels:string[] = ['Customer with only Orders', 'Customer with only Loan'\n                                    , 'Customer with Loan & Orders'];\n  public pieChartData:number[] = [300, 500, 200];\n  public pieChartType:string = 'pie';\n\n  public lineChartDataForOrders:Array<any> = [\n    {data: [45, 49, 50, 51, 66, 72, 50, 37,45, 49, 77,84], label: '2017'},\n    {data: [28, 32, 40, 67, 86, 74, 60, 47, 43], label: '2018'}\n  ];\n\n\n  public lineChartDataForLoans:Array<any> = [\n    {data: [20, 38, 45, 34, 36, 55, 25, 37,45, 39, 67,54], label: '2017'},\n    {data: [28, 48, 50, 39, 46, 57, 30, 49,38], label: '2018'}\n  ];\n\n\n  public lineChartLabels:Array<any> = ['January', 'February', 'March'\n                                        , 'April', 'May', 'June', 'July'\n                                        ,'August', 'September', 'October','November','December'];\n  public lineChartType:string = 'bar';\n\n\n  public randomizeType():void {\n    this.lineChartType = this.lineChartType === 'line' ? 'line' : 'bar';\n    this.pieChartType = this.pieChartType === 'doughnut' ? 'pie' : 'doughnut';\n  }\n\n  // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n \n  public chartHovered(e:any):void {\n    console.log(e);\n  }\n\n  public lineChartColors:Array<any> = [\n    { // grey\n      backgroundColor: '#ffd699',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    },\n    { // dark grey\n      backgroundColor: '#ccb3ff',\n      borderColor: 'rgba(137,83,96,1)',\n      pointBackgroundColor: 'rgba(77,83,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)'\n    }\n  ];\n\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div >  &nbsp;  Total income from orders this year :  \\n      <strong>{{totalIncomeFromOrders| currency:'INR':'symbol':'4.2-2'  }}</strong>  \\n    </div>\\n  <div >\\n    <div style=\\\"display: block;\\\">\\n    <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [legend]=\\\"lineChartLegend\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n    </div>\\n  </div>\\n  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-payment-dashboard',\n  templateUrl: './order-payment-dashboard.component.html',\n  styleUrls: ['./order-payment-dashboard.component.css']\n})\nexport class OrderPaymentDashboardComponent implements OnInit {\n\n  totalIncomeFromOrders = '810780';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  public lineChartData:Array<any> = [\n    {data: [49200, 58500, 89300, 94800, 130900, 116500, 88520, 69800, 51230, 62030], label: 'Monthly Income from Orders '},\n    \n  ];\n  public lineChartLabels:Array<any> = ['January', 'February', 'March', 'April'\n                                      , 'May', 'June', 'July', 'August','September','October'];\n  public lineChartOptions:any = {\n    responsive: true\n  };\n  public lineChartColors:Array<any> = [\n    { // grey\n      backgroundColor: '#8FD4F9',\n      borderColor: '#011C77',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n  ];\n  public lineChartLegend:boolean = true;\n  public lineChartType:string = 'line';\n\n  // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n \n  public chartHovered(e:any):void {\n    console.log(e);\n  }\n  \n}\n","module.exports = \"/*!\\n * Start Bootstrap - Agency v5.0.2 (https://startbootstrap.com/template-overviews/agency)\\n * Copyright 2013-2018 Start Bootstrap\\n * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-agency/blob/master/LICENSE)\\n */\\n\\n body {\\n    overflow-x: hidden;\\n    font-family: 'Roboto Slab', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n p {\\n    line-height: 1.75;\\n  }\\n\\n a {\\n    color: #fed136;\\n  }\\n\\n a:hover {\\n    color: #fec503;\\n  }\\n\\n .text-primary {\\n    color: #fed136 !important;\\n  }\\n\\n h1,\\n  h2,\\n  h3,\\n  h4,\\n  h5,\\n  h6 {\\n    font-weight: 700;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n section {\\n    padding: 100px 0;\\n  }\\n\\n section h2.section-heading {\\n    font-size: 40px;\\n    margin-top: 0;\\n    margin-bottom: 15px;\\n  }\\n\\n section h3.section-subheading {\\n    font-size: 16px;\\n    font-weight: 400;\\n    font-style: italic;\\n    margin-bottom: 75px;\\n    text-transform: none;\\n    font-family: 'Droid Serif', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n @media (min-width: 768px) {\\n    section {\\n      padding: 150px 0;\\n    }\\n  }\\n\\n .btn {\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n    font-weight: 700;\\n  }\\n\\n .btn-xl {\\n    font-size: 18px;\\n    padding: 20px 40px;\\n  }\\n\\n .btn-primary {\\n    background-color: #fed136;\\n    border-color: #fed136;\\n  }\\n\\n .btn-primary:active, .btn-primary:focus, .btn-primary:hover {\\n    background-color: #fec810 !important;\\n    border-color: #fec810 !important;\\n    color: white;\\n  }\\n\\n .btn-primary:active, .btn-primary:focus {\\n    box-shadow: 0 0 0 0.2rem rgba(254, 209, 55, 0.5) !important;\\n  }\\n\\n ::-moz-selection {\\n    background: #fed136;\\n    text-shadow: none;\\n  }\\n\\n ::selection {\\n    background: #fed136;\\n    text-shadow: none;\\n  }\\n\\n img::-moz-selection {\\n    background: transparent;\\n  }\\n\\n img::selection {\\n    background: transparent;\\n  }\\n\\n img::-moz-selection {\\n    background: transparent;\\n  }\\n\\n #mainNav {\\n    background-color: #212529;\\n  }\\n\\n #mainNav .navbar-toggler {\\n    font-size: 12px;\\n    right: 0;\\n    padding: 13px;\\n    text-transform: uppercase;\\n    color: white;\\n    border: 0;\\n    background-color: #fed136;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n #mainNav .navbar-brand {\\n    color: #fed136;\\n    font-family: 'Kaushan Script', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n #mainNav .navbar-brand.active, #mainNav .navbar-brand:active, #mainNav .navbar-brand:focus, #mainNav .navbar-brand:hover {\\n    color: #fec503;\\n  }\\n\\n #mainNav .navbar-nav .nav-item .nav-link {\\n    font-size: 90%;\\n    font-weight: 400;\\n    padding: 0.75em 0;\\n    letter-spacing: 1px;\\n    color: white;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n #mainNav .navbar-nav .nav-item .nav-link.active, #mainNav .navbar-nav .nav-item .nav-link:hover {\\n    color: #fed136;\\n  }\\n\\n @media (min-width: 992px) {\\n    #mainNav {\\n      padding-top: 25px;\\n      padding-bottom: 25px;\\n      transition: padding-top 0.3s, padding-bottom 0.3s;\\n      border: none;\\n      background-color: transparent;\\n    }\\n    #mainNav .navbar-brand {\\n      font-size: 1.75em;\\n      transition: all 0.3s;\\n    }\\n    #mainNav .navbar-nav .nav-item .nav-link {\\n      padding: 1.1em 1em !important;\\n    }\\n    #mainNav.navbar-shrink {\\n      padding-top: 0;\\n      padding-bottom: 0;\\n      background-color: #212529;\\n    }\\n    #mainNav.navbar-shrink .navbar-brand {\\n      font-size: 1.25em;\\n      padding: 12px 0;\\n    }\\n  }\\n\\n header.masthead {\\n    text-align: center;\\n    color: white;\\n    /*background-image: url(\\\"./img/header-bg.jpg\\\");*/\\n    background-repeat: no-repeat;\\n    background-attachment: scroll;\\n    background-position: center center;\\n    background-size: cover;\\n  }\\n\\n header.masthead .intro-text {\\n    padding-top: 150px;\\n    padding-bottom: 100px;\\n  }\\n\\n header.masthead .intro-text .intro-lead-in {\\n    font-size: 22px;\\n    font-style: italic;\\n    line-height: 22px;\\n    margin-bottom: 25px;\\n    font-family: 'Droid Serif', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n header.masthead .intro-text .intro-heading {\\n    font-size: 50px;\\n    font-weight: 700;\\n    line-height: 50px;\\n    margin-bottom: 25px;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n @media (min-width: 768px) {\\n    header.masthead .intro-text {\\n      padding-top: 300px;\\n      padding-bottom: 200px;\\n    }\\n    header.masthead .intro-text .intro-lead-in {\\n      font-size: 40px;\\n      font-style: italic;\\n      line-height: 40px;\\n      margin-bottom: 25px;\\n      font-family: 'Droid Serif', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n    }\\n    header.masthead .intro-text .intro-heading {\\n      font-size: 75px;\\n      font-weight: 700;\\n      line-height: 75px;\\n      margin-bottom: 50px;\\n      font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n    }\\n  }\\n\\n .service-heading {\\n    margin: 15px 0;\\n    text-transform: none;\\n  }\\n\\n #portfolio .portfolio-item {\\n    right: 0;\\n    margin: 0 0 15px;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-link {\\n    position: relative;\\n    display: block;\\n    max-width: 400px;\\n    margin: 0 auto;\\n    cursor: pointer;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-link .portfolio-hover {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    transition: all ease 0.5s;\\n    opacity: 0;\\n    background: rgba(254, 209, 54, 0.9);\\n  }\\n\\n #portfolio .portfolio-item .portfolio-link .portfolio-hover:hover {\\n    opacity: 1;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content {\\n    font-size: 20px;\\n    position: absolute;\\n    top: 50%;\\n    width: 100%;\\n    height: 20px;\\n    margin-top: -12px;\\n    text-align: center;\\n    color: white;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content i {\\n    margin-top: -12px;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content h3,\\n  #portfolio .portfolio-item .portfolio-link .portfolio-hover .portfolio-hover-content h4 {\\n    margin: 0;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-caption {\\n    max-width: 400px;\\n    margin: 0 auto;\\n    padding: 25px;\\n    text-align: center;\\n    background-color: #fff;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-caption h4 {\\n    margin: 0;\\n    text-transform: none;\\n  }\\n\\n #portfolio .portfolio-item .portfolio-caption p {\\n    font-size: 16px;\\n    font-style: italic;\\n    margin: 0;\\n    font-family: 'Droid Serif', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n #portfolio * {\\n    z-index: 2;\\n  }\\n\\n @media (min-width: 767px) {\\n    #portfolio .portfolio-item {\\n      margin: 0 0 30px;\\n    }\\n  }\\n\\n .portfolio-modal {\\n    padding-right: 0px !important;\\n  }\\n\\n .portfolio-modal .modal-dialog {\\n    margin: 1rem;\\n    max-width: 100vw;\\n  }\\n\\n .portfolio-modal .modal-content {\\n    padding: 100px 0;\\n    text-align: center;\\n  }\\n\\n .portfolio-modal .modal-content h2 {\\n    font-size: 3em;\\n    margin-bottom: 15px;\\n  }\\n\\n .portfolio-modal .modal-content p {\\n    margin-bottom: 30px;\\n  }\\n\\n .portfolio-modal .modal-content p.item-intro {\\n    font-size: 16px;\\n    font-style: italic;\\n    margin: 20px 0 30px;\\n    font-family: 'Droid Serif', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n .portfolio-modal .modal-content ul.list-inline {\\n    margin-top: 0;\\n    margin-bottom: 30px;\\n  }\\n\\n .portfolio-modal .modal-content img {\\n    margin-bottom: 30px;\\n  }\\n\\n .portfolio-modal .modal-content button {\\n    cursor: pointer;\\n  }\\n\\n .portfolio-modal .close-modal {\\n    position: absolute;\\n    top: 25px;\\n    right: 25px;\\n    width: 75px;\\n    height: 75px;\\n    cursor: pointer;\\n    background-color: transparent;\\n  }\\n\\n .portfolio-modal .close-modal:hover {\\n    opacity: 0.3;\\n  }\\n\\n .portfolio-modal .close-modal .lr {\\n    /* Safari and Chrome */\\n    z-index: 1051;\\n    width: 1px;\\n    height: 75px;\\n    margin-left: 35px;\\n    /* IE 9 */\\n    -webkit-transform: rotate(45deg);\\n    transform: rotate(45deg);\\n    background-color: #212529;\\n  }\\n\\n .portfolio-modal .close-modal .lr .rl {\\n    /* Safari and Chrome */\\n    z-index: 1052;\\n    width: 1px;\\n    height: 75px;\\n    /* IE 9 */\\n    -webkit-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    background-color: #212529;\\n  }\\n\\n .timeline {\\n    position: relative;\\n    padding: 0;\\n    list-style: none;\\n  }\\n\\n .timeline:before {\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 40px;\\n    width: 2px;\\n    margin-left: -1.5px;\\n    content: '';\\n    background-color: #e9ecef;\\n  }\\n\\n .timeline > li {\\n    position: relative;\\n    min-height: 50px;\\n    margin-bottom: 50px;\\n  }\\n\\n .timeline > li:after, .timeline > li:before {\\n    display: table;\\n    content: ' ';\\n  }\\n\\n .timeline > li:after {\\n    clear: both;\\n  }\\n\\n .timeline > li .timeline-panel {\\n    position: relative;\\n    float: right;\\n    width: 100%;\\n    padding: 0 20px 0 100px;\\n    text-align: left;\\n  }\\n\\n .timeline > li .timeline-panel:before {\\n    right: auto;\\n    left: -15px;\\n    border-right-width: 15px;\\n    border-left-width: 0;\\n  }\\n\\n .timeline > li .timeline-panel:after {\\n    right: auto;\\n    left: -14px;\\n    border-right-width: 14px;\\n    border-left-width: 0;\\n  }\\n\\n .timeline > li .timeline-image {\\n    position: absolute;\\n    z-index: 100;\\n    left: 0;\\n    width: 80px;\\n    height: 80px;\\n    margin-left: 0;\\n    text-align: center;\\n    color: white;\\n    border: 7px solid #e9ecef;\\n    border-radius: 100%;\\n    background-color: #fed136;\\n  }\\n\\n .timeline > li .timeline-image h4 {\\n    font-size: 10px;\\n    line-height: 14px;\\n    margin-top: 12px;\\n  }\\n\\n .timeline > li.timeline-inverted > .timeline-panel {\\n    float: right;\\n    padding: 0 20px 0 100px;\\n    text-align: left;\\n  }\\n\\n .timeline > li.timeline-inverted > .timeline-panel:before {\\n    right: auto;\\n    left: -15px;\\n    border-right-width: 15px;\\n    border-left-width: 0;\\n  }\\n\\n .timeline > li.timeline-inverted > .timeline-panel:after {\\n    right: auto;\\n    left: -14px;\\n    border-right-width: 14px;\\n    border-left-width: 0;\\n  }\\n\\n .timeline > li:last-child {\\n    margin-bottom: 0;\\n  }\\n\\n .timeline .timeline-heading h4 {\\n    margin-top: 0;\\n    color: inherit;\\n  }\\n\\n .timeline .timeline-heading h4.subheading {\\n    text-transform: none;\\n  }\\n\\n .timeline .timeline-body > ul,\\n  .timeline .timeline-body > p {\\n    margin-bottom: 0;\\n  }\\n\\n @media (min-width: 768px) {\\n    .timeline:before {\\n      left: 50%;\\n    }\\n    .timeline > li {\\n      min-height: 100px;\\n      margin-bottom: 100px;\\n    }\\n    .timeline > li .timeline-panel {\\n      float: left;\\n      width: 41%;\\n      padding: 0 20px 20px 30px;\\n      text-align: right;\\n    }\\n    .timeline > li .timeline-image {\\n      left: 50%;\\n      width: 100px;\\n      height: 100px;\\n      margin-left: -50px;\\n    }\\n    .timeline > li .timeline-image h4 {\\n      font-size: 13px;\\n      line-height: 18px;\\n      margin-top: 16px;\\n    }\\n    .timeline > li.timeline-inverted > .timeline-panel {\\n      float: right;\\n      padding: 0 30px 20px 20px;\\n      text-align: left;\\n    }\\n  }\\n\\n @media (min-width: 992px) {\\n    .timeline > li {\\n      min-height: 150px;\\n    }\\n    .timeline > li .timeline-panel {\\n      padding: 0 20px 20px;\\n    }\\n    .timeline > li .timeline-image {\\n      width: 150px;\\n      height: 150px;\\n      margin-left: -75px;\\n    }\\n    .timeline > li .timeline-image h4 {\\n      font-size: 18px;\\n      line-height: 26px;\\n      margin-top: 30px;\\n    }\\n    .timeline > li.timeline-inverted > .timeline-panel {\\n      padding: 0 20px 20px;\\n    }\\n  }\\n\\n @media (min-width: 1200px) {\\n    .timeline > li {\\n      min-height: 170px;\\n    }\\n    .timeline > li .timeline-panel {\\n      padding: 0 20px 20px 100px;\\n    }\\n    .timeline > li .timeline-image {\\n      width: 170px;\\n      height: 170px;\\n      margin-left: -85px;\\n    }\\n    .timeline > li .timeline-image h4 {\\n      margin-top: 40px;\\n    }\\n    .timeline > li.timeline-inverted > .timeline-panel {\\n      padding: 0 100px 20px 20px;\\n    }\\n  }\\n\\n .team-member {\\n    margin-bottom: 50px;\\n    text-align: center;\\n  }\\n\\n .team-member img {\\n    width: 225px;\\n    height: 225px;\\n    border: 7px solid #fff;\\n  }\\n\\n .team-member h4 {\\n    margin-top: 25px;\\n    margin-bottom: 0;\\n    text-transform: none;\\n  }\\n\\n .team-member p {\\n    margin-top: 0;\\n  }\\n\\n section#contact {\\n    background-color: #212529;\\n    /* background-image: url(\\\"./img/map-image.png\\\"); */\\n    background-repeat: no-repeat;\\n    background-position: center;\\n  }\\n\\n section#contact .section-heading {\\n    color: #fff;\\n  }\\n\\n section#contact .form-group {\\n    margin-bottom: 25px;\\n  }\\n\\n section#contact .form-group input,\\n  section#contact .form-group textarea {\\n    padding: 20px;\\n  }\\n\\n section#contact .form-group input.form-control {\\n    height: auto;\\n  }\\n\\n section#contact .form-group textarea.form-control {\\n    height: 248px;\\n  }\\n\\n section#contact .form-control:focus {\\n    border-color: #fed136;\\n    box-shadow: none;\\n  }\\n\\n section#contact ::-webkit-input-placeholder {\\n    font-weight: 700;\\n    color: #ced4da;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n section#contact :-moz-placeholder {\\n    font-weight: 700;\\n    color: #ced4da;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n section#contact ::-moz-placeholder {\\n    font-weight: 700;\\n    color: #ced4da;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n section#contact :-ms-input-placeholder {\\n    font-weight: 700;\\n    color: #ced4da;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n footer {\\n    padding: 25px 0;\\n    text-align: center;\\n  }\\n\\n footer span.copyright {\\n    font-size: 90%;\\n    line-height: 40px;\\n    text-transform: none;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n footer ul.quicklinks {\\n    font-size: 90%;\\n    line-height: 40px;\\n    margin-bottom: 0;\\n    text-transform: none;\\n    font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\\n  }\\n\\n ul.social-buttons {\\n    margin-bottom: 0;\\n  }\\n\\n ul.social-buttons li a {\\n    font-size: 20px;\\n    line-height: 50px;\\n    display: block;\\n    width: 50px;\\n    height: 50px;\\n    transition: all 0.3s;\\n    color: white;\\n    border-radius: 100%;\\n    outline: none;\\n    background-color: #212529;\\n  }\\n\\n ul.social-buttons li a:active, ul.social-buttons li a:focus, ul.social-buttons li a:hover {\\n    background-color: #fed136;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <h2>Welcome to Apni Dukan</h2>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveLoan(loan)\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Enter Loan Details for : <strong style=\\\"color: rgb(0, 204, 255)\\\">\\n          {{loan?.customerName}}</strong> </h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"loanAmount.invalid && loanAmount.touched\\\">\\n        <label for=\\\"loanAmount\\\" class=\\\"control-label\\\">Loan Amount</label>\\n        <input id=\\\"loanAmount\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"loanAmount\\\"\\n          (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"8\\\" [(ngModel)]=\\\"loan.loanAmount\\\" #loanAmount=\\\"ngModel\\\">\\n        <span class=\\\"help-block\\\" *ngIf=\\\"loanAmount.invalid && loanAmount.touched\\\">\\n          Please enter Loan Amount\\n        </span>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"loanCreatedDate\\\" class=\\\"control-label\\\">Loan Taken on Date</label>\\n        <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n        <div class=\\\"form-control\\\">\\n          <app-date-picker [(ngModel)]=\\\"loanCreatedDate\\\" name=\\\"loanCreatedDate\\\"> </app-date-picker>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"dueDate\\\" class=\\\"control-label\\\">Due Date</label>\\n        <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n        <div class=\\\"form-control\\\">\\n          <app-date-picker [(ngModel)]=\\\"enteredDate\\\" name=\\\"dueDate\\\"> </app-date-picker>\\n        </div>\\n      </div>\\n\\n\\n      <!-- Item list starts -->\\n\\n\\n      <div class=\\\"panel panel-default col-md-12\\\" id=\\\"itemDetailsId\\\" *ngFor=\\\"let itemObj of itemContainers; let i=index\\\">\\n\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div> Add details for Item {{i+1}}</div>\\n            <br>\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"itemName{{i}}\\\" class=\\\"control-label\\\">Item Name</label>\\n              <input id=\\\"itemName{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"itemName{{i}}\\\"\\n                [(ngModel)]=\\\"itemObj.itemName\\\" #itemNameCntrl=\\\"ngModel\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"itemNameCntrl.touched && itemNameCntrl.invalid\\\">\\n                Please enter itemName\\n              </span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"itemType{{i}}\\\" class=\\\"control-label\\\">Select Item Type</label>\\n              <select [(ngModel)]=\\\"itemObj.itemType\\\" name=\\\"itemType{{i}}\\\" id=\\\"itemType{{i}}\\\" class=\\\"form-control\\\">\\n                <option value=\\\"\\\" disabled selected>select a category</option>\\n                <option *ngFor=\\\"let item of availableItemType\\\" [value]=\\\"item\\\">{{item}}</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"weight{{i}}\\\" class=\\\"control-label\\\">Weight</label>\\n              <input id=\\\"weight{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"weight\\\"\\n                [(ngModel)]=\\\"itemObj.weight\\\" #weightCntrl=\\\"ngModel\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"weightCntrl.touched && weightCntrl.invalid\\\">\\n                Please enter weight\\n              </span>\\n\\n            </div>\\n\\n             <div class=\\\"form-group col-md-3\\\" >\\n                  <label for=\\\"itemQuality{{i}}\\\" class=\\\"control-label\\\">Iteam Quality (Tanch)%</label>\\n                  <select [(ngModel)]=\\\"itemObj.itemQuality\\\" name=\\\"itemQuality{{i}}\\\" id=\\\"itemQuality{{i}}\\\" class=\\\"form-control\\\" >\\n                    <option value=\\\"\\\" disabled selected>select a category</option>\\n                    <option *ngFor=\\\"let itemQuality of itemQualityList\\\" [value]=\\\"itemQuality\\\">{{itemQuality}}</option>\\n                  </select>\\n                </div> \\n\\n\\n\\n\\n          </div>\\n\\n          <div class=\\\"col-md-12\\\">\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"marketRate\\\" class=\\\"control-label\\\">Market Rate</label>\\n              <input id=\\\"marketRate{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"marketRate{{i}}\\\"\\n                [(ngModel)]=\\\"itemObj.marketRate\\\" #marketRateCntrl=\\\"ngModel\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"marketRateCntrl.invalid && marketRateCntrl.touched\\\">\\n                Please enter Market Rate\\n              </span>\\n\\n            </div>\\n\\n\\n           \\n\\n\\n\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"orderAmount{{i}}\\\" class=\\\"control-label\\\"> Item Selling Amount\\n                &nbsp;</label>\\n              <input id=\\\"orderAmount{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"orderAmount{{i}}\\\"\\n                [(ngModel)]=\\\"itemObj.itemPrice\\\">\\n              <span *ngIf=\\\"itemObj.calculationLogicString\\\" style=\\\"color:darkorange\\\">\\n                <small><em>({{itemObj.calculationLogicString}})</em></small></span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-3\\\">\\n              <label for=\\\"comments\\\">Item Comments</label>\\n              <input id=\\\"comments\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"comments\\\" [(ngModel)]=\\\"itemObj.itemComments\\\">\\n            </div>\\n\\n\\n          </div>\\n\\n\\n\\n\\n\\n        </div>\\n\\n\\n      </div>\\n\\n     \\n\\n        <div form-group col-md-6>\\n          <div  class=\\\"text-primary col-md-2\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"addMoreItems()\\\">Add More Items</div>\\n          <!--  <button class=\\\"btn btn-info\\\" (click)=\\\"addMoreItems()\\\">Add More Items</button> -->\\n          &nbsp;\\n          <div class=\\\"text-primary col-md-2\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteItems()\\\">Delete More Items</div>\\n          <!--   <button  class=\\\"btn btn-info\\\" (click)=\\\"deleteItems()\\\">Delete More Items</button> -->\\n        </div>\\n\\n      \\n      <br>\\n\\n\\n\\n<!-- \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"itemType\\\" class=\\\"control-label\\\">Select Item Type</label>\\n        <select [(ngModel)]=\\\"loan.itemType\\\" name=\\\"itemType\\\" id=\\\"itemType\\\" class=\\\"form-control\\\">\\n          <option value=\\\"\\\" disabled selected>select a category</option>\\n          <option *ngFor=\\\"let item of availableItemType\\\" [value]=\\\"item\\\">{{item}}</option>\\n        </select>\\n      </div> -->\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"rateOfInterest\\\" class=\\\"control-label\\\">Select Rate Of Interest %</label>\\n        <select [(ngModel)]=\\\"loan.rateOfInterest\\\" name=\\\"rateOfInterest\\\" id=\\\"rateOfInterest\\\" class=\\\"form-control\\\">\\n          <option value=\\\"\\\" disabled selected>select a Rate Of Interest</option>\\n          <option *ngFor=\\\"let rateOfIntrest of rateOfInterestList\\\" [value]=\\\"rateOfIntrest\\\">{{rateOfIntrest}}</option>\\n        </select>\\n      </div>\\n <!-- \\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"itemName.touched && itemName.invalid\\\">\\n        <label for=\\\"itemName\\\" class=\\\"control-label\\\">Item Name</label>\\n        <input id=\\\"itemName\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"itemName\\\" [(ngModel)]=\\\"loan.itemName\\\"\\n          #itemName=\\\"ngModel\\\">\\n        <span class=\\\"help-block\\\" *ngIf=\\\"itemName.touched && itemName.invalid\\\">\\n          Please enter itemName\\n        </span>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"weight.touched && weight.invalid\\\">\\n        <label for=\\\"weight\\\" class=\\\"control-label\\\">Weight</label>\\n        <input id=\\\"weight\\\" required type=\\\"text\\\" maxlength=\\\"8\\\" class=\\\"form-control\\\" name=\\\"weight\\\"\\n          [(ngModel)]=\\\"loan.weight\\\" (keypress)=\\\"numberOnly($event)\\\" #weight=\\\"ngModel\\\">\\n        <span class=\\\"help-block\\\" *ngIf=\\\"weight.touched && weight.invalid\\\">\\n          Please enter weight\\n        </span>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"itemQuality\\\" class=\\\"control-label\\\">Iteam Quality (Tanch)%</label>\\n        <select [(ngModel)]=\\\"loan.itemQuality\\\" name=\\\"itemQuality\\\" id=\\\"itemQuality\\\" class=\\\"form-control\\\">\\n          <option value=\\\"\\\" disabled selected>select a category</option>\\n          <option *ngFor=\\\"let itemQuality of itemQualityList\\\" [value]=\\\"itemQuality\\\">{{itemQuality}}</option>\\n        </select>\\n      </div>\\n\\n    -->\\n\\n      <div class=\\\"form-group\\\" >\\n        <label for=\\\"khataNumber\\\" >Khata Number</label>\\n        <input  id=\\\"khataNumber\\\"   type=\\\"text\\\" class=\\\"form-control\\\" \\n                name=\\\"khataNumber\\\" [(ngModel)]=\\\"loan.khataNumber\\\">\\n              \\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"comments\\\">Comments</label>\\n        <input id=\\\"comments\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"comments\\\" [(ngModel)]=\\\"loan.comments\\\">\\n      </div>\\n\\n\\n\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n    </div>\\n    <div class=\\\"panel-footer text-success\\\" *ngIf=\\\"successMessage\\\">\\n      {{successMessage}}\\n    </div>\\n    <div class=\\\"panel-footer text-danger\\\" *ngIf=\\\"errorResponse\\\">\\n      {{errorResponse}}\\n    </div>\\n    <div class=\\\"panel-footer text-danger\\\" *ngIf=\\\"validationError\\\">\\n      {{validationError}}\\n    </div>\\n  </div>\\n</form>\\n\\n\\n<div class=\\\"modal \\\" tabindex=\\\"-1\\\" id=\\\"confirmationModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\"\\n  [ngStyle]=\\\"{'display':getDisplayObject()}\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <div class=\\\"modal-header\\\">\\n\\n        <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n          &times;\\n        </button>\\n        <h4 class=\\\"modal-title\\\">Create Loan Status</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"text-success\\\" style=\\\"align-content: center\\\" *ngIf=\\\"successMessage\\\">\\n          <h4>{{successMessage}}</h4>\\n        </div>\\n\\n        <div class=\\\"text-error\\\" style=\\\"align-content: center\\\" *ngIf=\\\"errorResponse\\\">\\n          <h4>{{errorResponse}}</h4>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"btn btn-info\\\">Create one more Loan</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"dismissModalAndRedirect()\\\" data-dismiss=\\\"modal\\\">Go to\\n          Loan List</button>\\n      </div>\\n\\n\\n\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Loan} from '../models/loan.model';\nimport {LoanService} from '../services/loan.service';\nimport {DatePipe} from '@angular/common';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Items } from '../models/items.model';\n\n\n\n@Component({\n  selector: 'app-create-loan',\n  templateUrl: './create-loan.component.html',\n  styleUrls: ['./create-loan.component.css']\n})\nexport class CreateLoanComponent implements OnInit {\n  \n displayModalObject : string = 'none'; \n enteredDate : Date;\n loanCreatedDate:Date;\n successMessage;\n errorResponse;\n customerName;\n validationError;\n\n item = new Items();\n\n  itemContainers  =[];\n\n  availableItemType : string[] = [\n    \"Gold\", \"Silver\", \"Platinum\", \"Diamond\"\n  ];\n\n  rateOfInterestList : string[] = [\n    \"1.00\", \"1.25\",\"1.50\",\"1.75\", \"2.00\",\"2.25\", \"2.50\",\"2.75\", \"3.00\",\"3.25\",\"3.50\", \"3.75\",\"4.00\",\"4.25\", \"4.50\",\"4.75\", \"5\"\n  ];\n\n  itemQualityList : string[] = [\n    \"40\", \"50\", \"55\", \"60\", \"65\",\"70\", \"75\", \"80\", \"85\",\"90\",\"95\",\"99\",\"100\"\n  ];\n\n  \n  loan : Loan = {\n  loanId : null,\n\tloanAmount : null,\n\tdueDate : null,\n\tcustomerId :null,\n\trateOfInterest : null,\n\tcomments : null,\n\tstatus : null,\n\titemName : null,\n\titemQuality: null,\n\tweight : null,\n  customerName : null,\n  itemType :null,\n  createdDate : null,\n  khataNumber : null,\n  customerCity: null,\n  itemsList:null,\n  }\n\n  \n  constructor(private _loanService : LoanService\n              , private _route : ActivatedRoute\n              ,private _router : Router) {\n   \n   }\n\n  ngOnInit() {\n\n    let customerIdName = this._route.snapshot.paramMap.get('customerId');\n\n    let customeIdNameSplitted : string[]  = customerIdName.split(\"-\");\n    let custId = customeIdNameSplitted[0];\n    let custName = customeIdNameSplitted[1];\n\n   // this.customerName=custName;\n    this.loan.customerName = custName;\n    this.loan.customerId=custId;\n    this.itemContainers.push(this.item);\n  }\n\n  validateItemList() : string {\n    let respnse ='';\n    let i =1;\n    this.itemContainers.forEach(function(itm){\n  \n      if(itm.itemName == null ){\n        respnse='Please enter Item Name for item '+i;\n        return respnse;\n      }\n  \n      if(itm.weight == null ){\n        respnse='Please enter Weight for item : '+i;\n        return respnse;\n      }\n      if(itm.marketRate == null ){\n        respnse='Please enter marketRate for item : '+i;\n      return respnse;\n      }\n     \n      if(itm.itemPrice == null ){\n        respnse='Please enter order amount for Item '+i;\n        return respnse;\n      }\n  \n     \n     i++;\n    }\n    \n    )\n    return respnse;\n  }\n  \n\n  saveLoan(loan: Loan)  { //customerName\n   // alert(this.enteredDate)\n    let datePipe = new DatePipe('en-US');\n    this.loan.dueDate=  datePipe.transform(this.enteredDate, 'yyyy-MM-dd');\n    this.loan.createdDate = this.loanCreatedDate;\n\n\n    let res = this.validateItemList();\n    if(res != ''){\n\n      this.validationError=res;\n      return;\n    } \n\n    if(!this.validateLoanData(loan)){\n      return;\n    }\n    loan.itemsList=this.itemContainers;\n    this.validationError = null;\n\n    \n   \n   \n    this._loanService.saveLoan(loan)\n                          .subscribe(\n                            \n                            (res) => {\n\n                            if(res != null){\n\n                              if(res.status=='SUCCESS'){\n                                 \n                                  this.successMessage = \"Loan Details Saved Successfully.\";\n                                  this.displayModalObject = 'block';\n                                 // this._router.navigate(['/loanList']);\n                              }else{\n                                this.errorResponse = res.message;\n                              }\n                              \n                            }\n                            \n                              },\n                            error => {\n                              this.errorResponse = 'An Error Occured while saving Loan, Please try again.'\n                              console.error(JSON.stringify(error));\n                            });\n\n                          console.log(this._loanService);\n  }\n\n   delay(ms: number) {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n}\n\n\nnumberOnly(event): boolean {\n  const charCode = (event.which) ? event.which : event.keyCode;\n  if(charCode == 190  || charCode == 46){\n    return true\n  }\n  if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n    return false;\n  }\n  \n  return true;\n\n}\n\n\ngetDisplayObject() {\n   \n  return this.displayModalObject;\n\n}\n\ndismissModal()  {\n this.displayModalObject = 'none';\n window.location.reload();\n return this.displayModalObject;\n}\n\ndismissModalAndRedirect(){\n this._router.navigate(['/loanList'])\n}\n\n\n\nvalidateLoanData(loan : Loan) : boolean {\n  if(loan == null){\n    this.validationError='Please enter customer details';\n    return false;\n  }\n\n  if(loan.loanAmount == null || loan.loanAmount == 0){\n    this.validationError='Please enter valid loanAmount';\n    return false;\n  }\n  \n  if(loan.dueDate == null || loan.dueDate == ''){\n    console.log('loan.dueDate : '+ loan.dueDate)\n    this.validationError='Please enter dueDate';\n    return false;\n  }\n\n\n\n  if(loan.rateOfInterest == null || loan.rateOfInterest == ''){\n     \n    this.validationError='Please select rateOfInterest';\n    return false;\n  }\n\n\n\n  if(loan.khataNumber == null ){\n    this.validationError='Please enter Khata Number';\n    return false;\n  }\n  \n  return true;\n}\n\n\n\n\naddMoreItems() {\n  console.log(JSON.stringify(this.itemContainers));\n  this.item = new Items();\n  this.itemContainers.push(this.item);\n}\n\ndeleteItems() {\n  this.itemContainers.pop();\n}\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\"><strong style=\\\"color:rgb(154, 234, 240)\\\">{{customerName}}'s</strong> All Loans</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\" *ngIf=\\\"loanList\\\">\\n        <table class=\\\"table table-striped table-bordered table-hover table-condensed\\\">\\n        <thead  class=\\\"table table-bordered\\\">\\n              <th>Loan Id</th>\\n              <th>Name</th>\\n              <th>Amount</th>\\n              <th>Due Date</th>\\n              <th>Rate Of Intrest</th>\\n              <th>Comments</th>\\n              <th>Status</th>\\n              <th>More Detail</th> \\n              <th>New Loan</th>\\n            </thead>\\n            <tbody > \\n            <tr *ngFor=\\\"let loan of loanList\\\" [class.bg-success]=\\\"loan.status=='CLOSED'\\\"\\n            [class.text-success]=\\\"loan.status=='CLOSED'\\\">  \\n                <td> {{loan.loanId}}</td>\\n                <td> {{loan.customerName}}</td>\\n                <td> {{loan.loanAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n                <td> {{loan.dueDate | date:\\\"dd/MM/yy\\\" }}</td>\\n\\n                <td> {{loan.rateOfInterest}} %</td>\\n                <td> {{loan.comments}}</td>\\n                <td> {{loan.status | uppercase }}</td>\\n\\n                <td style=\\\"cursor: pointer;\\\"> \\n                    <div class=\\\"text-primary\\\" (click)=\\\"onSelect(loan.loanId)\\\">More Details</div></td>\\n                    <td style=\\\"cursor: pointer;\\\"> \\n                      <div class=\\\"text-primary\\\" (click)=createCustomerLoan(order.customerId,order.customerName)>\\n                       <span class=\\\"glyphicon glyphicon-plus\\\"></span> Create Loan </div>\\n                   </td>\\n            </tr>\\n            \\n            </tbody>\\n            \\n            </table>\\n           \\n    </div>\\n    \\n    <div class=\\\"panel-body\\\" *ngIf=\\\"!loanList\\\">\\n            <h5 class=\\\"text-info\\\"> {{customerName}} doesn't have any loan yet. Please click on below button to place new loan.</h5>\\n            \\n            \\n                  <button class=\\\"btn btn-info \\\" (click)=createCustomerLoan(customerId,customerName) type=\\\"button\\\">Create Loan</button> \\n        </div>\\n</div>\\n\\n<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\"> <strong style=\\\"color:rgb(154, 234, 240)\\\">{{customerName}}'s</strong> All Orders </h3>\\n    </div>\\n    <div class=\\\"panel-body\\\" *ngIf=\\\"customerOrderList\\\">\\n        <table class=\\\"table table-striped table-bordered table-hover table-condensed\\\">\\n            <thead >\\n              <th>Order Id</th>\\n              <th>Name</th>\\n              <th>Amount</th>\\n              <th>Due Date</th>\\n              <!-- <th>Item Type</th> -->\\n              <!-- <th>Rate Of Intrest</th> -->\\n              <th>Comments</th>\\n              <th>Status</th>\\n              <!-- <th>Name</th> -->\\n              <!-- <th>Quality</th> -->\\n             <!--  <th>Weight</th>  -->\\n              <th>More Detail</th> \\n              <th>New Order</th>\\n              \\n            </thead>\\n            <tbody > \\n            <tr *ngFor=\\\"let order of customerOrderList\\\" [class.bg-success]=\\\"order.status=='Closed'\\\"\\n            [class.text-success]=\\\"order.status=='Closed'\\\" >  \\n                <td> {{order.orderId}}</td>\\n                <td> {{order.customerName}}</td>\\n                <td> {{order.orderAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n                <td> {{order.dueDate | date:\\\"dd/MM/yy\\\" }}</td>\\n                <!-- <td> {{loan.itemType| uppercase}}</td> -->\\n                <!-- <td> {{loan.rateOfInterest}} %</td> -->\\n                <td> {{order.comments}}</td>\\n                <td > {{order.status | uppercase }}</td>\\n                <!-- <td> {{order.itemName}}</td> -->\\n                <!-- <td> {{loan.itemQuality }}%</td> -->\\n                <!-- <td> {{order.weight}}g</td> -->\\n                <td style=\\\"cursor: pointer;\\\">\\n                   <div class=\\\"text-primary\\\" (click)=\\\"getOrderDetails(order.orderId)\\\">Details</div>\\n                </td>\\n                <td style=\\\"cursor: pointer;\\\"> \\n                  <div class=\\\"text-primary\\\" (click)=createOrderForCustomer(order.customerId,order.customerName)>\\n                   <span class=\\\"glyphicon glyphicon-plus\\\"></span> Create Order </div>\\n               </td>\\n            </tr>\\n            </tbody>\\n            \\n         </table>\\n           \\n    </div>\\n    <div class=\\\"panel-body\\\" *ngIf=\\\"!customerOrderList\\\">\\n        <h5 class=\\\"text-info\\\"> {{customerName}} doesn't have any order yet. Please click on below button to place new Order.</h5>\\n        \\n            \\n              <button class=\\\"btn btn-info \\\" (click)=createOrderForCustomer(customerId,customerName) type=\\\"button\\\">Create Order</button> \\n    </div>\\n</div>\\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Loan} from '../models/loan.model';\nimport { LoanService } from '../services/loan.service';\nimport {OrderService} from '../services/order.service';\nimport {Router} from '@angular/router';\nimport {Order} from '../models/order.model';\n\n@Component({\n  selector: 'app-customer-loan-detail',\n  templateUrl: './customer-loan-detail.component.html',\n  styleUrls: ['./customer-loan-detail.component.css']\n})\nexport class CustomerLoanDetailComponent implements OnInit {\n  loanList: Loan[] ;\n  customerOrderList : Order[];\n  customerId;\n  customerName;\n  constructor(private _ActivatedRoute : ActivatedRoute\n              ,private _loanService : LoanService\n              ,private _router : Router\n              ,private _orderService : OrderService) { }\n\n  ngOnInit() {\n\n   let customerIdName = this._ActivatedRoute.snapshot.paramMap.get(\"id\");\n\n   let customeIdNameSplitted : string[]  = customerIdName.split(\"-\");\n   this.customerId = customeIdNameSplitted[0];\n   this.customerName = customeIdNameSplitted[1];\n\n   console.log(customeIdNameSplitted);\n   this._loanService.getCustomerLoanList(this.customerId)\n   .subscribe((loanData) => this.loanList = loanData);\n\n   this._orderService.getOrderListForCustomer(this.customerId, null)\n                    .subscribe((orderData) => this.customerOrderList = orderData)\n  }\n\n  \n  onSelect(custId){\n    this._router.navigate(['/loanDetail', custId]);\n  }\n\n  getOrderDetails(id){\n    this._router.navigate(['/orderDetails', id]);\n }\n\n createOrderForCustomer(custId, custName){\n  this._router.navigate(['/createOrder', custId+'-'+custName]);\n}\n\ncreateCustomerLoan(custId, custName){\n  this._router.navigate(['/createLoan', custId+'-'+custName]);\n}\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Loan Details</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">           \\n            <div> <button class=\\\"btn btn-primary\\\" \\n                (click)=\\\"editLoanDetail(loanDetail?.loanId)\\\">Edit Loan Details </button></div>\\n    <div class=\\\"pannel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n         \\n            <span   style=\\\"color:rgb(27, 27, 83)\\\">Name  : </span><strong>{{loanDetail?.customerName}}</strong> \\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span  style=\\\"color:rgb(27, 27, 83)\\\">City :</span><strong> {{loanDetail?.customerCity}}</strong> \\n         \\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n          <table class=\\\"table table-striped table-bordered table-hover table-condensed\\\">\\n            <tbody > \\n             <tr>\\n                <td>Loan Id</td>\\n                <td class=\\\"text-primary\\\"> {{loanDetail?.loanId}}</td>\\n              </tr> \\n              <tr>\\n                <td>Khata Number</td>\\n                <td class=\\\"text-primary\\\"> {{loanDetail?.khataNumber}}</td>\\n              </tr> \\n             \\n              <tr>\\n                  <td>Amount</td>\\n                  <td class=\\\"text-primary\\\"> {{loanDetail?.loanAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n              </tr>\\n               \\n              <tr>\\n                  <td>Due Date</td>\\n                  <td class=\\\"text-primary\\\"> {{loanDetail?.dueDate | date:\\\"dd/MM/yy\\\" }}</td>\\n              </tr>\\n             \\n            <tr>  \\n                <td>Rate of Interest</td>\\n                <td class=\\\"text-primary\\\"> {{loanDetail?.rateOfInterest}}%</td>\\n            </tr>\\n\\n           \\n            <tr>  \\n                <td>Loan Taken on Date in (\\\"DD/MM/YY\\\")</td>\\n                <td class=\\\"text-primary\\\"> {{loanDetail?.createdDate | date:\\\"dd/MM/yy\\\" }}</td>\\n            </tr>\\n            <tr>  \\n                <td>Comment</td>\\n                <td class=\\\"text-primary\\\"> {{loanDetail?.comments| lowercase}}</td>\\n            </tr>\\n            <tr>  \\n            <tr [class.bg-success]=\\\"loanDetail?.status=='CLOSED'\\\">  \\n                    <td>Loan Status</td>\\n                    <td class=\\\"text-primary\\\"> {{loanDetail?.status }}</td>\\n                </tr>\\n\\n\\n\\n\\n               \\n\\n\\n\\n            <tr *ngIf=\\\"loanDetail?.status=='OPEN'\\\">  \\n                <td colspan=\\\"2\\\" class=\\\"text-center\\\"><button class=\\\"btn btn-primary\\\" \\n                    data-target=\\\"#loginModal\\\"  data-toggle=\\\"modal\\\" >Add Payment/Loan </button> </td>\\n             \\n              </tr>\\n\\n            </tbody>\\n            </table>\\n            <div class=\\\"text-info\\\" *ngIf=\\\"!loanDetail.loanId\\\"> This customer doesn't have any loan  </div>\\n        </div>\\n\\n        <div class=\\\"pannel panel-info\\\" >\\n            <div class=\\\"panel-heading\\\">\\n               Loan Item Details\\n              </div>\\n        \\n            <div class=\\\"panel-body\\\"> \\n                <table class=\\\"table  table-bordered table-hover table-condensed\\\">\\n                    <thead  class=\\\"table-bordered\\\">\\n                      <th>Item Name</th>\\n                      <th>Item Type</th>\\n                      <th>Weight (grams)</th>\\n                      <th>Item Quality(Tanch)</th>\\n                      <th>Count</th>\\n                      <th>Item Price</th>\\n                     \\n                      \\n                     \\n                    </thead>\\n                    <tbody > \\n                    <tr *ngFor=\\\"let item of loanDetail?.itemsList\\\"  >  \\n                        <td> {{item.itemName}}</td>\\n                        <td> {{item.itemType }}</td>\\n                        <td> {{item.weight || \\\"NA\\\"}}</td>\\n                        <td> {{item.itemQuality || \\\"NA\\\"}}</td>\\n                        <td> {{item.count || \\\"1\\\"}}</td>\\n                        <td> {{item.itemPrice || \\\"NA\\\"}}</td>\\n                        \\n                    </tr> \\n                    \\n                    </tbody>\\n                </table>\\n            </div> \\n        </div>\\n\\n\\n\\n       \\n\\n\\n\\n\\n\\n\\n        <div class=\\\"pannel panel-info\\\" *ngIf=\\\"checkPaymentDetailsAvailable()\\\">\\n            <div class=\\\"panel-heading\\\">\\n               Loan Payment Details\\n              </div>\\n\\n            <div class=\\\"panel-body\\\"> \\n                <table class=\\\"table  table-bordered table-hover table-condensed\\\">\\n                    <thead  class=\\\"table-bordered\\\">\\n                      <th>Payment Id</th>\\n                      <th>Payment Amount</th>\\n                      <th>Balance Amount</th>\\n                      <th>Interest Amount</th>\\n                      <th>Payment Date</th>\\n                      <th>Payment Type</th>\\n                      <th>Comment</th>\\n                      \\n                     \\n                    </thead>\\n                    <tbody > \\n                    <tr *ngFor=\\\"let payment of loanPaymentDetailsList\\\" \\n                    [class.text-success]=\\\"payment.paymentType=='PARTIAL_PAYMENT'\\\"\\n                    [class.text-danger]=\\\"payment.paymentType=='ADDITIONAL_LOAN'\\\">  \\n                        <td> {{payment.loanPaymentId}}</td>\\n                        <td> {{payment.partialPaymentAmount | currency:'INR':'symbol':'4.2-2'}}</td>\\n                        <td> {{payment.balanceAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n                        <td> {{payment.interestAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n                        <td> {{payment.createdOn|  date:\\\"dd/MM/yy\\\"}}</td>\\n                        <td> {{payment.paymentType | lowercase}}</td>\\n                       \\n                        <td> {{payment.comment }}</td>\\n                        \\n                       \\n                    </tr> \\n                    \\n                    </tbody>\\n                </table>\\n            </div> \\n        </div>\\n        <div *ngIf=\\\"loanDetail?.status=='OPEN'\\\">\\n             <table class=\\\"table table-hover table-condensed\\\">\\n              <tbody > \\n                <tr>  \\n                  <td colspan=\\\"5\\\" class=\\\"text-center\\\"><button class=\\\"btn btn-primary\\\" \\n                    (click)=\\\"calculateInterest(loanDetail)\\\">Calculate Intrest </button> </td>\\n               \\n                </tr>\\n             </tbody>\\n             </table>\\n        </div>\\n\\n        <div class=\\\"pannel panel-success\\\" *ngIf=\\\"simpleInterest\\\" >\\n            <div class=\\\"panel-heading\\\">\\n               Calculated Interest Details\\n\\n              </div>\\n\\n            <div class=\\\"panel-body\\\"> \\n            <table class=\\\"table table-striped table-bordered table-hover\\\">\\n                <tbody > \\n                    \\n                    <tr  *ngIf=\\\"simpleInterest\\\">  \\n                        <td>Current Loan Amount</td>\\n                        <td class=\\\"text-success\\\">{{(currLoanAmount) | currency:'INR':'symbol':'4.2-2' }}</td>\\n                    </tr>\\n                    <tr  *ngIf=\\\"simpleInterest\\\">  \\n                        <td> Interest Amount</td>\\n                        <td class=\\\"text-success\\\">{{(simpleInterest) | currency:'INR':'symbol':'4.2-2' }} \\n                            </td>\\n                    </tr>\\n                    <tr  *ngIf=\\\"simpleInterest\\\">  \\n                            <td> Total Time </td>\\n                            <td class=\\\"text-success\\\"> {{noOfMonths}} months and {{noOfDays}} days </td>\\n                    </tr>\\n                    <tr  *ngIf=\\\"simpleInterest\\\">  \\n                        <td> Total Amount with Interest  </td>\\n                        <td class=\\\"text-success\\\"> <strong>{{(totalAmount)\\n                            | currency:'INR':'symbol' }}</strong></td>\\n                    </tr>\\n                </tbody>\\n              </table> \\n            </div> \\n        </div>\\n       \\n         \\n        \\n    </div>\\n\\n\\n\\n    <div class=\\\"modal fade\\\" tabindex=\\\"-1\\\" id=\\\"loginModal\\\"\\n        data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                    &times;\\n                </button>\\n                <h4 class=\\\"modal-title\\\">Add Payment</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form>\\n                    \\n                    <div class=\\\"form-group\\\" >\\n                                <label for=\\\"partialPaymentAmount\\\" class=\\\"control-label\\\">Payment Amount</label>\\n                                <input  id=\\\"partialPaymentAmount\\\" required  type=\\\"number\\\" class=\\\"form-control\\\" \\n                                        name=\\\"partialPaymentAmount\\\" [(ngModel)]=\\\"loanPayment.partialPaymentAmount\\\"\\n                                       #loanAmount=\\\"ngModel\\\">\\n                                       \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label for=\\\"comments\\\">Comments</label>\\n                            <input id=\\\"comments\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                                   name=\\\"comments\\\" [(ngModel)]=\\\"loanPayment.comment\\\">\\n                     </div>\\n                     <div class=\\\"form-group\\\">\\n                            <label for=\\\"createdOn\\\" class=\\\"control-label\\\">Payment Date</label>\\n                            <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n                            <div class=\\\"form-control\\\" >\\n                                <app-date-picker [(ngModel)]=\\\"loanPayment.createdOn\\\"  name=\\\"createdOn\\\"> </app-date-picker>\\n                            </div>\\n                          </div>\\n                    <div class=\\\"form-group\\\" >\\n                            <label for=\\\"paymentType\\\" class=\\\"control-label\\\">Additional Loan/Partial Payment</label>\\n                            <select [(ngModel)]=\\\"loanPayment.paymentType\\\" name=\\\"paymentType\\\" id=\\\"paymentType\\\" class=\\\"form-control\\\" >\\n                              <option value=\\\"\\\" disabled selected>select a category</option>\\n                              <option *ngFor=\\\"let paymentType of paymentTypeList\\\" [value]=\\\"paymentType\\\">{{paymentType}}</option>\\n                            </select>\\n                    </div>\\n                   \\n                </form>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPayment(loanPayment)\\\">Save</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                        data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n            <div class=\\\"text-success\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"success_response\\\"> \\n                <h4>{{success_response}}</h4> </div>\\n               \\n            <div class=\\\"text-error\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"errorResponseOnPayment\\\">\\n                 <h4>{{errorResponseOnPayment}}</h4></div>\\n        </div>\\n    </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Loan } from '../../models/loan.model';\nimport {LoanService} from '../../services/loan.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { LoanPayment } from '../../models/loanPayment.model';\nimport {InterestResponse} from '../../models/interestResponse.model';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {ViewChild, ElementRef} from '@angular/core';\n\n@Component({\n  selector: 'app-loan-detail',\n  templateUrl: './loan-detail.component.html',\n  styleUrls: ['./loan-detail.component.css']\n})\nexport class LoanDetailComponent implements OnInit {\n  success_response;\n  errorResponseOnPayment;\n  interestResponse :InterestResponse;\n  loanDetail : Loan ;\n  loanPayment : LoanPayment = {\n    loanId : null,\n    partialPaymentAmount : null,\n    balanceAmount : null,\n    loanPaymentId : null,\n\t  dueDate : null,\n    comment : null,\n    paymentType : null\n    \n  };\n  \n  paymentTypeList: string[] = ['Loan' , 'Payment'];\n  loanPaymentDetailsList : LoanPayment[];\n  simpleInterest  ;\n  totalAmount ;\n  noOfDays;\n  noOfMonths : number;\n  currLoanAmount : number;\n  paymentDetailsAvailable : boolean = false;\n\n  //totalPartialInterest : number;\n  \n  constructor(private _loanService : LoanService\n              , private _route : ActivatedRoute\n              , private _router : Router) { }\n\n  ngOnInit() {\n   let loanId = this._route.snapshot.paramMap.get('id');\n\n    this._loanService.getLoanDetail(loanId)\n                           .subscribe((loanData) => this.loanDetail = loanData);\n \n                          \n\n    this._loanService.getLoanPaymentDetailList(loanId)\n                    .subscribe((paymentListData) => this.loanPaymentDetailsList = paymentListData);\n                    \n    \n    this._loanService.getInterest(loanId, null).subscribe(\n      (interestAmountResponse) => {this.interestResponse =interestAmountResponse;\n                                   }\n    )\n    \n  }\n\n  calculateInterest(loanDetail) {\n    let todayDate : Date = new Date();\n    let loanDate : Date = null;\n    let diffInMs: number =  Math.abs(todayDate.getTime() - loanDetail.createdDate);\n    this.noOfDays = Math.ceil(diffInMs / (1000 * 3600 * 24)); \n    \n    if(typeof this.loanPaymentDetailsList !== 'undefined' && this.loanPaymentDetailsList.length > 0){\n      this.currLoanAmount =  this.loanPaymentDetailsList[this.loanPaymentDetailsList.length-1].balanceAmount;\n      this.paymentDetailsAvailable = true;\n    }else{\n      this.currLoanAmount = loanDetail.loanAmount;\n    }\n    if( this.interestResponse == null){\n        let principal = loanDetail.loanAmount;\n        let rate = loanDetail.rateOfInterest;\n        let  month : number = 365/12;\n        this.simpleInterest = (this.currLoanAmount) *(rate/100)* (this.noOfDays/month);// time in days\n      }else{\n        \n        this.simpleInterest = this.interestResponse.INTEREST ;\n        this.noOfDays = this.interestResponse.DAYS ;\n      }\n      this.noOfMonths= Math.floor(this.noOfDays/30);\n      this.noOfDays = this.noOfDays%30;\n      this.totalAmount = parseFloat(this.simpleInterest)+this.currLoanAmount;\n  }\n\n  checkPaymentDetailsAvailable(): boolean {\n\n    if (typeof this.loanPaymentDetailsList !== 'undefined' && this.loanPaymentDetailsList.length > 0) {\n      this.currLoanAmount = this.loanPaymentDetailsList[this.loanPaymentDetailsList.length - 1].balanceAmount;\n      return true;\n    } else {\n      return false;\n    }\n    \n  }\n  \n  /* calculateTotalPartialInterest() : number {\n    let totalPartialInterest : number = 0;\n    if(typeof this.loanPaymentDetailsList !== 'undefined' && this.loanPaymentDetailsList.length > 0){\n      for (let partialPayment of this.loanPaymentDetailsList) {\n     \n        totalPartialInterest = totalPartialInterest + partialPayment.interestAmount;\n        }\n    }\n    return totalPartialInterest;\n  } */\n\n  \n  savePartialPayment(loanPayment : LoanPayment) : void {\n    loanPayment.loanId=this.loanDetail.loanId;\n    console.log(JSON.stringify(loanPayment))\n    this._loanService.saveLoanPayment(loanPayment)\n                  .subscribe((loanData) =>\n                   {this.loanPayment = loanData\n                    console.log(\"loan Payment Saved SuccessFully.\")\n                    this.success_response='loan Payment Saved SuccessFully.'\n                    window.location.reload();\n                   },\n                  error => { this.handleError(error);\n                   this.errorResponseOnPayment = JSON.stringify(error);\n                   \n                    \n                  });\n                  \n                  \n                  \n\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n     throw error;\n  };\n\n\n\n  editLoanDetail(loanId){\n    this._router.navigate(['editLoanDetail', loanId ]);\n    \n  }\n \n}\n","module.exports = \"\"","module.exports = \"<form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateLoan(loan)\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Enter Loan Details for : <strong style=\\\"color: rgb(0, 204, 255)\\\">\\n            {{loan?.customerName}}</strong> </h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n  \\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"loanAmount.invalid && loanAmount.touched\\\">\\n          <label for=\\\"loanAmount\\\" class=\\\"control-label\\\">Loan Amount</label>\\n          <input id=\\\"loanAmount\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"loanAmount\\\"\\n            (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"8\\\" [(ngModel)]=\\\"loan.loanAmount\\\" #loanAmount=\\\"ngModel\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"loanAmount.invalid && loanAmount.touched\\\">\\n            Please enter Loan Amount\\n          </span>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"loanCreatedDate\\\" class=\\\"control-label\\\">Loan Taken on Date</label>\\n          <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n          <div class=\\\"form-control\\\">\\n            <app-date-picker [(ngModel)]=\\\"loanCreatedDate\\\" name=\\\"loanCreatedDate\\\"> </app-date-picker>\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"dueDate\\\" class=\\\"control-label\\\">Due Date</label>\\n          <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n          <div class=\\\"form-control\\\">\\n            <app-date-picker [(ngModel)]=\\\"enteredDate\\\" name=\\\"dueDate\\\"> </app-date-picker>\\n          </div>\\n        </div>\\n  \\n  \\n        <!-- Item list starts -->\\n  \\n  \\n        <div class=\\\"panel panel-default col-md-12\\\" id=\\\"itemDetailsId\\\" *ngFor=\\\"let itemObj of itemContainers; let i=index\\\">\\n  \\n          <div class=\\\"panel-body\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div> Add details for Item {{i+1}}</div>\\n              <br>\\n              <div class=\\\"form-group col-md-3\\\">\\n                <label for=\\\"itemName{{i}}\\\" class=\\\"control-label\\\">Item Name</label>\\n                <input id=\\\"itemName{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"itemName{{i}}\\\"\\n                  [(ngModel)]=\\\"itemObj.itemName\\\" #itemNameCntrl=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"itemNameCntrl.touched && itemNameCntrl.invalid\\\">\\n                  Please enter itemName\\n                </span>\\n              </div>\\n  \\n              <div class=\\\"form-group col-md-3\\\">\\n                <label for=\\\"itemType{{i}}\\\" class=\\\"control-label\\\">Select Item Type</label>\\n                <select [(ngModel)]=\\\"itemObj.itemType\\\" name=\\\"itemType{{i}}\\\" id=\\\"itemType{{i}}\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"\\\" disabled selected>select a category</option>\\n                  <option *ngFor=\\\"let item of availableItemType\\\" [value]=\\\"item\\\">{{item}}</option>\\n                </select>\\n              </div>\\n  \\n              <div class=\\\"form-group col-md-3\\\">\\n                <label for=\\\"weight{{i}}\\\" class=\\\"control-label\\\">Weight</label>\\n                <input id=\\\"weight{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"weight\\\"\\n                  [(ngModel)]=\\\"itemObj.weight\\\" #weightCntrl=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"weightCntrl.touched && weightCntrl.invalid\\\">\\n                  Please enter weight\\n                </span>\\n  \\n              </div>\\n  \\n               <div class=\\\"form-group col-md-3\\\" >\\n                    <label for=\\\"itemQuality{{i}}\\\" class=\\\"control-label\\\">Iteam Quality (Tanch)%</label>\\n                    <select [(ngModel)]=\\\"itemObj.itemQuality\\\" name=\\\"itemQuality{{i}}\\\" id=\\\"itemQuality{{i}}\\\" class=\\\"form-control\\\" >\\n                      <option value=\\\"\\\" disabled selected>select a category</option>\\n                      <option *ngFor=\\\"let itemQuality of itemQualityList\\\" [value]=\\\"itemQuality\\\">{{itemQuality}}</option>\\n                    </select>\\n                  </div> \\n  \\n  \\n  \\n  \\n            </div>\\n  \\n            <div class=\\\"col-md-12\\\">\\n  \\n              <div class=\\\"form-group col-md-3\\\">\\n                <label for=\\\"marketRate\\\" class=\\\"control-label\\\">Market Rate</label>\\n                <input id=\\\"marketRate{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"marketRate{{i}}\\\"\\n                  [(ngModel)]=\\\"itemObj.marketRate\\\" #marketRateCntrl=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"marketRateCntrl.invalid && marketRateCntrl.touched\\\">\\n                  Please enter Market Rate\\n                </span>\\n  \\n              </div>\\n  \\n  \\n             \\n  \\n  \\n  \\n  \\n              <div class=\\\"form-group col-md-3\\\">\\n                <label for=\\\"orderAmount{{i}}\\\" class=\\\"control-label\\\"> Item Selling Amount\\n                  &nbsp;</label>\\n                <input id=\\\"orderAmount{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"orderAmount{{i}}\\\"\\n                  [(ngModel)]=\\\"itemObj.itemPrice\\\">\\n                <span *ngIf=\\\"itemObj.calculationLogicString\\\" style=\\\"color:darkorange\\\">\\n                  <small><em>({{itemObj.calculationLogicString}})</em></small></span>\\n              </div>\\n  \\n              <div class=\\\"form-group col-md-3\\\">\\n                <label for=\\\"comments\\\">Item Comments</label>\\n                <input id=\\\"comments\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"comments\\\" [(ngModel)]=\\\"itemObj.itemComments\\\">\\n              </div>\\n  \\n  \\n            </div>\\n  \\n  \\n  \\n  \\n  \\n          </div>\\n  \\n  \\n        </div>\\n  \\n       \\n  \\n          <div form-group col-md-6>\\n            <div  class=\\\"text-primary col-md-2\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"addMoreItems()\\\">Add More Items</div>\\n            <!--  <button class=\\\"btn btn-info\\\" (click)=\\\"addMoreItems()\\\">Add More Items</button> -->\\n            &nbsp;\\n            <div class=\\\"text-primary col-md-2\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteItems()\\\">Delete More Items</div>\\n            <!--   <button  class=\\\"btn btn-info\\\" (click)=\\\"deleteItems()\\\">Delete More Items</button> -->\\n          </div>\\n  \\n        \\n        <br>\\n  \\n  \\n  \\n  \\n       <!--  <div class=\\\"form-group\\\">\\n          <label for=\\\"itemType\\\" class=\\\"control-label\\\">Select Item Type</label>\\n          <select [(ngModel)]=\\\"loan.itemType\\\" name=\\\"itemType\\\" id=\\\"itemType\\\" class=\\\"form-control\\\">\\n            <option value=\\\"\\\" disabled selected>select a category</option>\\n            <option *ngFor=\\\"let item of availableItemType\\\" [value]=\\\"item\\\">{{item}}</option>\\n          </select>\\n        </div> -->\\n  \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"rateOfInterest\\\" class=\\\"control-label\\\">Select Rate Of Interest %</label>\\n          <select [(ngModel)]=\\\"loan.rateOfInterest\\\" name=\\\"rateOfInterest\\\" id=\\\"rateOfInterest\\\" class=\\\"form-control\\\">\\n            <option value=\\\"\\\" disabled selected>select a Rate Of Interest</option>\\n            <option *ngFor=\\\"let rateOfIntrest of rateOfInterestList\\\" [value]=\\\"rateOfIntrest\\\">{{rateOfIntrest}}</option>\\n          </select>\\n        </div>\\n  \\n       <!--  <div class=\\\"form-group\\\" [class.has-error]=\\\"itemName.touched && itemName.invalid\\\">\\n          <label for=\\\"itemName\\\" class=\\\"control-label\\\">Item Name</label>\\n          <input id=\\\"itemName\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"itemName\\\" [(ngModel)]=\\\"loan.itemName\\\"\\n            #itemName=\\\"ngModel\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"itemName.touched && itemName.invalid\\\">\\n            Please enter itemName\\n          </span>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"weight.touched && weight.invalid\\\">\\n          <label for=\\\"weight\\\" class=\\\"control-label\\\">Weight</label>\\n          <input id=\\\"weight\\\" required type=\\\"text\\\" maxlength=\\\"8\\\" class=\\\"form-control\\\" name=\\\"weight\\\"\\n            [(ngModel)]=\\\"loan.weight\\\" (keypress)=\\\"numberOnly($event)\\\" #weight=\\\"ngModel\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"weight.touched && weight.invalid\\\">\\n            Please enter weight\\n          </span>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"itemQuality\\\" class=\\\"control-label\\\">Iteam Quality (Tanch)%</label>\\n          <select [(ngModel)]=\\\"loan.itemQuality\\\" name=\\\"itemQuality\\\" id=\\\"itemQuality\\\" class=\\\"form-control\\\">\\n            <option value=\\\"\\\" disabled selected>select a category</option>\\n            <option *ngFor=\\\"let itemQuality of itemQualityList\\\" [value]=\\\"itemQuality\\\">{{itemQuality}}</option>\\n          </select>\\n        </div> -->\\n  \\n        <div class=\\\"form-group\\\" >\\n            <label for=\\\"khataNumber\\\" >Khata Number</label>\\n            <input  id=\\\"khataNumber\\\"   type=\\\"text\\\" class=\\\"form-control\\\" \\n                    name=\\\"khataNumber\\\" [(ngModel)]=\\\"loan.khataNumber\\\">\\n                  \\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"comments\\\">Comments</label>\\n          <input id=\\\"comments\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"comments\\\" [(ngModel)]=\\\"loan.comments\\\">\\n        </div> \\n  \\n  \\n  \\n      </div>\\n      <div class=\\\"panel-footer\\\">\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n      </div>\\n      <div class=\\\"panel-footer text-success\\\" *ngIf=\\\"successMessage\\\">\\n        {{successMessage}}\\n      </div>\\n      <div class=\\\"panel-footer text-danger\\\" *ngIf=\\\"errorResponse\\\">\\n        {{errorResponse}}\\n      </div>\\n      <div class=\\\"panel-footer text-danger\\\" *ngIf=\\\"validationError\\\">\\n        {{validationError}}\\n      </div>\\n    </div>\\n  </form>\\n  \\n  \\n  <div class=\\\"modal \\\" tabindex=\\\"-1\\\" id=\\\"confirmationModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\"\\n    [ngStyle]=\\\"{'display':getDisplayObject()}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n      <div class=\\\"modal-content\\\">\\n  \\n        <div class=\\\"modal-header\\\">\\n  \\n          <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n            &times;\\n          </button>\\n          <h4 class=\\\"modal-title\\\">Create Loan Status</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"text-success\\\" style=\\\"align-content: center\\\" *ngIf=\\\"successMessage\\\">\\n            <h4>{{successMessage}}</h4>\\n          </div>\\n  \\n          <div class=\\\"text-error\\\" style=\\\"align-content: center\\\" *ngIf=\\\"errorResponse\\\">\\n            <h4>{{errorResponse}}</h4>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"btn btn-info\\\">Create one more Loan</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"dismissModalAndRedirect()\\\" data-dismiss=\\\"modal\\\">Go to\\n            Loan List</button>\\n        </div>\\n  \\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Loan } from 'src/app/models/loan.model';\nimport { LoanService } from 'src/app/services/loan.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-loan-details-edit',\n  templateUrl: './loan-details-edit.component.html',\n  styleUrls: ['./loan-details-edit.component.css']\n})\nexport class LoanDetailsEditComponent implements OnInit {\n\n  loan :Loan;\n  itemContainers:any;\n  displayModalObject : string = 'none'; \n  enteredDate : Date;\n loanCreatedDate:Date;\n successMessage;\n errorResponse;\n customerName;\n validationError;\n\n  availableItemType : string[] = [\n    \"Gold\", \"Silver\", \"Platinum\", \"Diamond\"\n  ];\n\n  rateOfInterestList : string[] = [\n    \"1.00\", \"1.25\",\"1.50\",\"1.75\", \"2.00\",\"2.25\", \"2.50\",\"2.75\", \"3.00\",\"3.25\",\"3.50\", \"3.75\",\"4.00\",\"4.25\", \"4.50\",\"4.75\", \"5\"\n  ];\n\n  itemQualityList : string[] = [\n    \"40\", \"50\", \"55\", \"60\", \"65\",\"70\", \"75\", \"80\", \"85\",\"90\",\"95\",\"99\"\n  ];\n\n\n  constructor(private _loanService : LoanService\n    , private _route : ActivatedRoute\n    , private _router : Router) { }\n\n  ngOnInit() {\n    let loanId = this._route.snapshot.paramMap.get('id');\n\n    this._loanService.getLoanDetail(loanId)\n                           .subscribe(\n                             (loanData) => {\n                               this.loan = loanData;\n                               this.itemContainers=loanData.itemsList;\n                              this.enteredDate = new Date(loanData.dueDate);\n                              this.loanCreatedDate = new Date(loanData.createdDate);\n                              console.log( \"Loan details are : \" + JSON.stringify(this.loan ))\n\n                              });\n  }\n\n \n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if(charCode == 190  || charCode == 46){\n      return true\n    }\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    \n    return true;\n  \n  }\n  \n  \n  getDisplayObject() {\n     \n    return this.displayModalObject;\n  \n  }\n  \n  dismissModal()  {\n   this.displayModalObject = 'none';\n   window.location.reload();\n   return this.displayModalObject;\n  }\n  \n  dismissModalAndRedirect(){\n   this._router.navigate(['/loanList'])\n  }\n\n  validateItemList() : string {\n    let respnse ='';\n    let i =1;\n    this.itemContainers.forEach(function(itm){\n  \n      if(itm.itemName == null ){\n        respnse='Please enter Item Name for item '+i;\n        return respnse;\n      }\n  \n      if(itm.weight == null ){\n        respnse='Please enter Weight for item : '+i;\n        return respnse;\n      }\n      if(itm.marketRate == null ){\n        respnse='Please enter marketRate for item : '+i;\n      return respnse;\n      }\n     \n      if(itm.itemPrice == null ){\n        respnse='Please enter order amount for Item '+i;\n        return respnse;\n      }\n  \n     \n     i++;\n    }\n    \n    )\n    return respnse;\n  }\n\n  validateLoanData(loan : Loan) : boolean {\n    if(loan == null){\n      this.validationError='Please enter customer details';\n      return false;\n    }\n  \n    if(loan.loanAmount == null || loan.loanAmount == 0){\n      this.validationError='Please enter valid loanAmount';\n      return false;\n    }\n    \n    if(loan.dueDate == null || loan.dueDate == ''){\n      console.log('loan.dueDate : '+ loan.dueDate)\n      this.validationError='Please enter dueDate';\n      return false;\n    }\n  \n    \n  \n    if(loan.rateOfInterest == null || loan.rateOfInterest == ''){\n       \n      this.validationError='Please select rateOfInterest';\n      return false;\n    }\n  \n    \n    return true;\n  }\n\n  updateLoan(loan: Loan)  { //customerName\n    // alert(this.enteredDate)\n     let datePipe = new DatePipe('en-US');\n     this.loan.dueDate=  datePipe.transform(this.enteredDate, 'yyyy-MM-dd');\n     this.loan.createdDate = this.loanCreatedDate;\n \n \n     let res = this.validateItemList();\n     if(res != ''){\n \n       this.validationError=res;\n       return;\n     } \n \n     if(!this.validateLoanData(loan)){\n       return;\n     }\n     loan.itemsList=this.itemContainers;\n     this.validationError = null;\n \n     \n    \n    \n     this._loanService.updateLoan(loan)\n                           .subscribe(\n                             \n                             (res) => {\n \n                             if(res != null){\n \n                               if(res.status=='SUCCESS'){\n                                  \n                                   this.successMessage = \"Loan Details Saved Successfully.\";\n                                   this.displayModalObject = 'block';\n                                   this._router.navigate(['loanDetail', loan.loanId ]);\n                                  // this._router.navigate(['/loanList']);\n                               }else{\n                                 this.errorResponse = res.message;\n                               }\n                               \n                             }\n                             \n                               },\n                             error => {\n                               this.errorResponse = 'An Error Occured while saving Loan, Please try again.'\n                               console.error(JSON.stringify(error));\n                             });\n \n                           console.log(this._loanService);\n   }\n \n    delay(ms: number) {\n     return new Promise( resolve => setTimeout(resolve, ms) );\n }\n \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n    <div style=\\\"float: right;\\\">\\n        <form #searchEmployeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"searchLoans(searchString)\\\">\\n          <table class=\\\"table-condensed\\\">\\n            <tr>\\n              <td>\\n                <div style=\\\"color:aquamarine\\\" *ngIf=\\\"filterInfo\\\">Showing result with filter : {{searchString}} </div>\\n              </td>\\n              <td style=\\\"cursor: pointer;\\\">\\n                <div style=\\\"color:rgb(222, 224, 236)\\\" *ngIf=\\\"filterInfo\\\" (click)=clearFilter()>\\n                  <span id=\\\"searchclear\\\" class=\\\"glyphicon glyphicon-remove-circle\\\"> </span>Clear Filter </div>\\n              </td>\\n    \\n              <td>\\n                <div class=\\\"text-danger\\\" class=\\\"bg-danger\\\" *ngIf=\\\"emptySearchString\\\"> {{emptySearchString}} </div>\\n              </td>\\n              <td class=\\\"mx-auto\\\">\\n                <div>\\n                  <input type=\\\"text\\\" name=\\\"searchString\\\" required placeholder=\\\"Search Loans\\\" [(ngModel)]=\\\"searchString\\\">\\n                </div>\\n    \\n              </td>\\n    \\n              <td>\\n                <button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">Search</button>\\n              </td>\\n    \\n            </tr>\\n          </table>\\n        </form>\\n      </div>\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">Loan List : <strong style=\\\"color:aquamarine\\\"> {{totalRecords}} records found</strong></h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-bordered table-hover table-condensed\\\">\\n          <thead >\\n            <th>Khata Number</th>\\n            <th>Name</th>\\n            <th>Amount</th>\\n            <th>Due Date</th>\\n            <!-- <th>Item Type</th> -->\\n            <!-- <th>Rate Of Intrest</th> -->\\n            <!-- <th>Comments</th> -->\\n            <th>Status</th>\\n           <!--  <th>Name</th> -->\\n            <!-- <th>Quality</th> -->\\n          <!--   <th>Weight</th>  -->\\n            <th>More Detail</th> \\n            <th>New Loan</th>\\n          </thead>\\n          <tbody > \\n          <tr *ngFor=\\\"let loan of loanList\\\" [class.bg-success]=\\\"loan.status=='CLOSED'\\\" [class.text-success]=\\\"loan.status=='CLOSED'\\\"  >  \\n              <td> {{loan.khataNumber}}</td>\\n              <td>  <a routerLink=\\\"/customerDetails/{{loan.customerId}}\\\" routerLinkActive=\\\"active\\\"> {{loan.customerName}}</a></td>\\n              <td> {{loan.loanAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n              <td> {{loan.dueDate | date:\\\"dd/MM/yy\\\" }}</td>\\n              <!-- <td> {{loan.itemType| uppercase}}</td> -->\\n              <!-- <td> {{loan.rateOfInterest}} %</td> -->\\n              <!-- <td> {{loan.comments}}</td> -->\\n              <td > {{loan.status | lowercase }}</td>\\n             <!--  <td> {{loan.itemName}}</td> -->\\n              <!-- <td> {{loan.itemQuality }}%</td> -->\\n             <!--  <td> {{loan.weight}}g</td> -->\\n              <td style=\\\"cursor: pointer;\\\"> <div class=\\\"text-primary\\\" (click)=\\\"onSelect(loan.loanId)\\\">Details</div></td>\\n              <td style=\\\"cursor: pointer;\\\"> <div class=\\\"text-primary\\\" (click)=createCustomerLoan(loan.customerId,loan.customerName)>\\n                 <span class=\\\"glyphicon glyphicon-plus\\\"></span> Create Loan </div></td>\\n          </tr>\\n          </tbody>\\n          \\n       </table>\\n        <!-- pager -->\\n    <div>\\n        <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n                <a (click)=\\\"setPage(1)\\\">First</a>\\n            </li>\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n                <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\n            </li>\\n            <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n                <a (click)=\\\"setPage(page)\\\">{{page}}</a>\\n            </li>\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n                <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\n            </li>\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n                <a (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\n            </li>\\n        </ul>  \\n    </div>\\n          \\n  </div>\\n  </div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoanService } from '../services/loan.service';\nimport {Loan} from '../models/loan.model';\nimport {Router} from '@angular/router';\nimport {PagerService} from '../services/pagerService.service';\n\n@Component({\n  selector: 'app-loan-list',\n  templateUrl: './loan-list.component.html',\n  styleUrls: ['./loan-list.component.css']\n})\nexport class LoanListComponent implements OnInit {\n\n  loanList: Loan[] ;\n  \n\n  //Pagination & Search attributes\n  errorResponseOnSearch;\n  noSearchResultFound;\n  emptySearchString;\n  searchString;\n  filterInfo: boolean;\n  errorResponse;\n  totalRecords;\n  perPage;\n  \n  currentPage = 1;\n   // pager object\n   pager: any = {};\n \n   // paged items\n   pagedItems: any[];\n\n\n\n\n   constructor(private _loanService : LoanService\n              ,private _router : Router\n              , private pagerService: PagerService) { \n     \n   }\n \n   ngOnInit() {\n    if(this.currentPage == 1){\n        this.getLoanListDetails(1, 10);\n    } \n   }\n\n   getLoanListDetails(currentPage, perPageSize){\n      this._loanService.getLoanList(currentPage, perPageSize)\n                           .subscribe(\n                      //(loanData) => this.loanList = loanData\n                      res => {\n      \n                        console.log(res);\n                        if(res != null){\n                          \n                          if(res.status == 'SUCCESS'){\n                            this.loanList = res.data;\n                            this.totalRecords = res.totalCount;\n                            console.log('totalRecords is '+this.totalRecords)\n                            this.perPage = res.perPage;\n                            // initialize to page 1\n                            this.setPageOnLoad(res.pageNumber, res.totalCount);\n                          }else{\n                            this.errorResponse = res.message;\n                          }\n                        }\n                       \n                      },\n                      err => {\n                        this.errorResponse = JSON.stringify(err.message);\n                        console.log(err)\n                      }\n                  );\n   }\n\n\n   \n\n   onSelect(id){\n      this._router.navigate(['/loanDetail', id]);\n   }\n\n   createCustomerLoan(custId, custName){\n    this._router.navigate(['createLoan', custId+'-'+custName ]);\n  }\n\n  setPageOnLoad(page: number, totalCount : number) {\n    if (page < 1 || page > this.pager.totalPages) {\n        return;\n    }\n\n    // get pager object from service\n    this.pager = this.pagerService.getPager(totalCount, page, this.perPage);\n    this.currentPage = page;\n    //console.log('Current page is : '+page);\n    // get current page of items\n    this.pagedItems = this.loanList.slice(this.pager.startIndex, this.pager.endIndex + 1);\n}\n\n  setPage(page: number) {\n    if (page < 1 || page > this.pager.totalPages) {\n        return;\n    }\n\n    // get pager object from service\n    this.pager = this.pagerService.getPager(this.totalRecords, page, this.perPage);\n    this.currentPage = page;\n    //console.log('Current page is : '+page);\n    // get current page of items\n   if(this.searchString != null){\n    this.searchLoans(this.searchString);\n   }else{\n    this.getLoanListDetails(page, 10);\n   }\n      \n    \n    this.pagedItems = this.loanList.slice(this.pager.startIndex, this.pager.endIndex + 1);\n}\n\n\nsearchLoans(searchString : string){\n  if(searchString == null || searchString ==''){\n    this.emptySearchString = \"Please enter any name to search.\"\n\n    return;\n  }\n  this.emptySearchString = null;\n  this._loanService.searchLoans(searchString, this.currentPage, this.perPage).subscribe(\n    \n    res => {\n      console.log(res);\n      if(res != null){\n        \n        if(res.status == 'SUCCESS'){\n          this.loanList = res.data;\n          this.totalRecords = res.totalCount;\n          this.noSearchResultFound = null;\n          this.filterInfo = true;\n          this.perPage = res.perPage;\n          // initialize to page 1\n          this.setPageOnLoad(res.pageNumber, res.totalCount);\n        }else{\n          this.errorResponse = res.message;\n        }\n      }\n     \n    },\n    err => {\n      this.errorResponseOnSearch = JSON.stringify(err);  \n      console.log(err)\n    }\n\n  )\n \n  \n}\n\n/* To clear serch filters*/\nclearFilter(){\n  this.getLoanListDetails(this.currentPage, 10);\n  this.searchString = null;\n  this.filterInfo = false;\n}\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-partial-payment',\n  templateUrl: './partial-payment.component.html',\n  styleUrls: ['./partial-payment.component.css']\n})\nexport class PartialPaymentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"py-5\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 mx-auto\\\">\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\n  \\n        <!-- form card login -->\\n        <div class=\\\"card rounded-0\\\">\\n          <div class=\\\"card-header\\\">\\n            <h3 class=\\\"mb-0\\\">Login</h3>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <form class=\\\"form\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"uname1\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.userName\\\" name=\\\"userName\\\" required>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" required>\\n              </div>\\n              <button type=\\\"button\\\" (click)=\\\"loginUser()\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\n            </form>\\n          </div>\\n          <!--/card-block-->\\n        </div>\\n        <!-- /form card login -->\\n        <div class=\\\"text-danger\\\"> {{errorResponse}}</div>\\n      </div>\\n     \\n  \\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {UserDetails} from '../models/userDetails.model';\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  errorResponse;\n  loginUserData : UserDetails = {\n\n    userName: null,\n    password: null,\n    auth_token: null\n\n\n  }\n\n  constructor(private _authService : AuthService\n            , private _router : Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(){\n    console.log(this.loginUserData);\n    this._authService.loginUser(this.loginUserData)\n    //.pipe(map(res => res.json()))\n    .subscribe(\n      res => {\n        console.log('loggin response');\n        console.log(res);\n        if(res != null){\n          \n          if(res.status == 'SUCCESS'){\n            localStorage.setItem('token', res.userDetails.authToken);\n            localStorage.setItem('userName', res.userDetails.userName);\n            this._router.navigate(['dashboard']);\n          }else{\n            this.errorResponse = res.message;\n          }\n        }\n       \n      },\n      err => {\n        this.errorResponse = JSON.stringify(err.message);\n        console.log(err)\n      }\n    )\n  }\n\n}\n","export class Items {  \t  \n   \n\titemType: string;\n\titemComments: string;\n\tstatus: string ;\n\titemName : string;\n\titemQuality : number;\n\tweight : number ;\n\titemCount : number;\n\titemPrice : number;\n\tkhataNumber : number;\n\texchangeItemName : string;\n\texchangeItemQuality : number;\n\texchangeWeight : number;\n\tdiscount : number;\n\tmakingCharge : number;\n\tmarketRate : number;\n\tcalculationLogicString:string;\n\n\t\n\n}","module.exports = \".backdrop{ \\n\\n\\n    background-color:rgba(0,0,0,0.6);\\n    \\n    \\n    position:fixed;\\n    \\n    \\n    top:0;\\n    \\n    \\n    left:0;\\n    \\n    \\n    width:100%;\\n    \\n    \\n    height:100vh;\\n    \\n    \\n    }\\n    \\n    \"","module.exports = \"<form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveOrder(order)\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Enter Order Details for :\\n                       <strong style=\\\"color:rgb(0, 204, 255)\\\">{{order.customerName}}</strong></h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n\\n      \\n        <div class=\\\"panel panel-default col-md-12\\\" id=\\\"itemDetailsId\\\" *ngFor=\\\"let itemObj of itemContainers; let i=index\\\">\\n\\n\\n\\n          <div class=\\\"panel-body\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div> Add details for Item {{i+1}}</div>\\n              <br>\\n              <div class=\\\"form-group col-md-3\\\"   >\\n                <label for=\\\"itemName{{i}}\\\" class=\\\"control-label\\\">Item Name</label>\\n                <input id=\\\"itemName{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\"\\n                       name=\\\"itemName{{i}}\\\" [(ngModel)]=\\\"itemObj.itemName\\\" #itemNameCntrl=\\\"ngModel\\\">\\n                       <span class=\\\"help-block\\\" *ngIf=\\\"itemNameCntrl.touched && itemNameCntrl.invalid\\\">\\n                         Please enter itemName\\n                       </span>\\n              </div>\\n    \\n              <div class=\\\"form-group col-md-3\\\" >\\n                <label for=\\\"itemType{{i}}\\\"  class=\\\"control-label\\\">Select Item Type</label>\\n                <select [(ngModel)]=\\\"itemObj.itemType\\\" name=\\\"itemType{{i}}\\\" id=\\\"itemType{{i}}\\\" class=\\\"form-control\\\" >\\n                    <option value=\\\"\\\" disabled selected>select a category</option>\\n                    <option *ngFor=\\\"let item of availableItemType\\\" [value]=\\\"item\\\">{{item}}</option>\\n                  </select>\\n            </div>\\n    \\n            <div class=\\\"form-group col-md-3\\\" >\\n              <label for=\\\"weight{{i}}\\\" class=\\\"control-label\\\">Weight</label>\\n              <input id=\\\"weight{{i}}\\\" required type=\\\"text\\\" class=\\\"form-control\\\"\\n                     name=\\\"weight\\\" [(ngModel)]=\\\"itemObj.weight\\\" #weightCntrl=\\\"ngModel\\\">\\n                     <span class=\\\"help-block\\\" *ngIf=\\\"weightCntrl.touched && weightCntrl.invalid\\\">\\n                      Please enter weight\\n                    </span>\\n                     \\n            </div>\\n    \\n           <!--  <div class=\\\"form-group col-md-3\\\" >\\n              <label for=\\\"itemQuality{{i}}\\\" class=\\\"control-label\\\">Iteam Quality (Tanch)%</label>\\n              <select [(ngModel)]=\\\"itemObj.itemQuality\\\" name=\\\"itemQuality{{i}}\\\" id=\\\"itemQuality{{i}}\\\" class=\\\"form-control\\\" >\\n                <option value=\\\"\\\" disabled selected>select a category</option>\\n                <option *ngFor=\\\"let itemQuality of itemQualityList\\\" [value]=\\\"itemQuality\\\">{{itemQuality}}</option>\\n              </select>\\n            </div> -->\\n    \\n           \\n    \\n            <div class=\\\"form-group col-md-3\\\" >\\n              <label for=\\\"makingCharge{{i}}\\\" class=\\\"control-label\\\">Making Charge</label>\\n              <input  id=\\\"makingCharge{{i}}\\\"  type=\\\"text\\\" class=\\\"form-control\\\" \\n                      name=\\\"makingCharge{{i}}\\\" [(ngModel)]=\\\"itemObj.makingCharge\\\">\\n                     \\n            </div>\\n\\n            </div>\\n\\n            <div class=\\\"col-md-12\\\">\\n\\n              <div class=\\\"form-group col-md-3\\\" >\\n                <label for=\\\"marketRate\\\" class=\\\"control-label\\\">Market Rate</label>\\n                <input  id=\\\"marketRate{{i}}\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n                        name=\\\"marketRate{{i}}\\\" [(ngModel)]=\\\"itemObj.marketRate\\\"  #marketRateCntrl=\\\"ngModel\\\">\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"marketRateCntrl.invalid && marketRateCntrl.touched\\\">\\n                          Please enter Market Rate \\n                     </span>\\n                      \\n        </div>\\n      \\n      \\n              <div class=\\\"form-group col-md-3\\\" >\\n                <label for=\\\"discount{{i}}\\\" class=\\\"control-label\\\">Discount </label>\\n                <input  id=\\\"discount{{i}}\\\"  type=\\\"text\\\" class=\\\"form-control\\\" \\n                        name=\\\"discount{{i}}\\\" [(ngModel)]=\\\"itemObj.discount\\\" (blur)=\\\"calculateItemOrderAmount(itemObj, i)\\\"\\n                       #discount=\\\"ngModel\\\">\\n                       \\n              </div>\\n      \\n             \\n             \\n      \\n         <div class=\\\"form-group col-md-3\\\">\\n          <label for=\\\"orderAmount{{i}}\\\" class=\\\"control-label\\\"> Order Amount  \\n              &nbsp;</label>\\n          <input  id=\\\"orderAmount{{i}}\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  name=\\\"orderAmount{{i}}\\\" [(ngModel)]=\\\"itemObj.itemPrice\\\">\\n                  <span *ngIf=\\\"itemObj.calculationLogicString\\\" style=\\\"color:darkorange\\\">\\n                    <small><em>({{itemObj.calculationLogicString}})</em></small></span>\\n        </div>\\n      \\n        <div class=\\\"form-group col-md-3\\\">\\n          <label for=\\\"comments\\\">Item Comments</label>\\n          <input id=\\\"comments\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                 name=\\\"comments\\\" [(ngModel)]=\\\"itemObj.itemComments\\\">\\n        </div>\\n      \\n\\n            </div>\\n\\n         \\n          \\n\\n       \\n      </div>\\n\\n\\n        </div>\\n\\n        <div form-group col-md-6>\\n\\n          <div form-group col-md-6>\\n            <div  class=\\\"text-primary col-md-2\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"addMoreItems()\\\">Add More Items</div>\\n            <!--  <button class=\\\"btn btn-info\\\" (click)=\\\"addMoreItems()\\\">Add More Items</button> -->\\n            &nbsp;\\n            <div class=\\\"text-primary col-md-2\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"deleteItems()\\\">Delete More Items</div>\\n            <!--   <button  class=\\\"btn btn-info\\\" (click)=\\\"deleteItems()\\\">Delete More Items</button> -->\\n          </div>\\n         \\n        </div>\\n       <br>\\n\\n       <!-- \\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"itemName.touched && itemName.invalid\\\">\\n            <label for=\\\"itemName\\\" class=\\\"control-label\\\">Item Name</label>\\n            <input id=\\\"itemName\\\" required type=\\\"text\\\" class=\\\"form-control\\\"\\n                   name=\\\"itemName\\\" [(ngModel)]=\\\"order.itemName\\\" #itemName=\\\"ngModel\\\">\\n                   <span class=\\\"help-block\\\" *ngIf=\\\"itemName.touched && itemName.invalid\\\">\\n                     Please enter itemName\\n                   </span>\\n          </div>\\n     \\n          <div class=\\\"form-group\\\" >\\n              <label for=\\\"itemType\\\"  class=\\\"control-label\\\">Select Item Type</label>\\n              <select [(ngModel)]=\\\"order.itemType\\\" name=\\\"itemType\\\" id=\\\"itemType\\\" class=\\\"form-control\\\" >\\n                  <option value=\\\"\\\" disabled selected>select a category</option>\\n                  <option *ngFor=\\\"let item of availableItemType\\\" [value]=\\\"item\\\">{{item}}</option>\\n                </select>\\n          </div>\\n  \\n           \\n  \\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"weight.touched && weight.invalid\\\">\\n            <label for=\\\"weight\\\" class=\\\"control-label\\\">Weight</label>\\n            <input id=\\\"weight\\\" required type=\\\"text\\\" class=\\\"form-control\\\"\\n                   name=\\\"weight\\\" [(ngModel)]=\\\"order.weight\\\" #weight=\\\"ngModel\\\">\\n                   <span class=\\\"help-block\\\" *ngIf=\\\"weight.touched && weight.invalid\\\">\\n                     Please enter weight\\n                   </span>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\" >\\n            <label for=\\\"itemQuality\\\" class=\\\"control-label\\\">Iteam Quality (Tanch)%</label>\\n            <select [(ngModel)]=\\\"order.itemQuality\\\" name=\\\"itemQuality\\\" id=\\\"itemQuality\\\" class=\\\"form-control\\\" >\\n              <option value=\\\"\\\" disabled selected>select a category</option>\\n              <option *ngFor=\\\"let itemQuality of itemQualityList\\\" [value]=\\\"itemQuality\\\">{{itemQuality}}</option>\\n            </select>\\n          </div>\\n\\n       -->\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"dueDate\\\" class=\\\"control-label\\\">Due Date</label>\\n            <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n            <div class=\\\"form-control\\\" >\\n                <app-date-picker [(ngModel)]=\\\"order.dueDate\\\"  (click)=\\\"calculateTotalOrderAmount(order)\\\"  name=\\\"dueDate\\\"> </app-date-picker>\\n            </div>\\n        </div>\\n\\n    \\n      <!--   <div class=\\\"form-group\\\" [class.has-error]=\\\"marketRate.invalid && marketRate.touched\\\">\\n                <label for=\\\"marketRate\\\" class=\\\"control-label\\\">Market Rate</label>\\n                <input  id=\\\"marketRate\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n                        name=\\\"marketRate\\\" [(ngModel)]=\\\"order.marketRate\\\"\\n                       #marketRate=\\\"ngModel\\\" (blur)=\\\"calculateAmount(order)\\\">\\n                       <span class=\\\"help-block\\\" *ngIf=\\\"marketRate.invalid && marketRate.touched\\\">\\n                            Please enter Market Rate \\n                       </span>\\n         </div>\\n\\n\\n      <div class=\\\"form-group\\\" [class.has-error]=\\\"orderAmount.invalid && orderAmount.touched\\\">\\n          <label for=\\\"orderAmount\\\" class=\\\"control-label\\\"> Order Amount  \\n              &nbsp;<span *ngIf=\\\"calculationLogic\\\" style=\\\"color:darkorange\\\">\\n                <small><em>({{calculationLogic}})</em></small></span></label>\\n          <input  id=\\\"orderAmount\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  name=\\\"orderAmount\\\" [(ngModel)]=\\\"order.orderAmount\\\"\\n                 #orderAmount=\\\"ngModel\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"orderAmount.invalid && orderAmount.touched\\\">\\n                      Please enter Order Amount\\n                 </span>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"makingCharge.invalid && makingCharge.touched\\\">\\n          <label for=\\\"makingCharge\\\" class=\\\"control-label\\\">Making Charge</label>\\n          <input  id=\\\"makingCharge\\\"  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  name=\\\"makingCharge\\\" [(ngModel)]=\\\"order.makingCharge\\\"\\n                 #makingCharge=\\\"ngModel\\\">\\n                 \\n        </div>\\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"discount.invalid && discount.touched\\\">\\n          <label for=\\\"discount\\\" class=\\\"control-label\\\">Discount </label>\\n          <input  id=\\\"discount\\\"  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  name=\\\"discount\\\" [(ngModel)]=\\\"order.discount\\\"\\n                 #discount=\\\"ngModel\\\">\\n                 \\n        </div> -->\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"orderAmount.invalid && orderAmount.touched\\\">\\n          <label for=\\\"orderAmount\\\" class=\\\"control-label\\\"> Total Order Amount  \\n              &nbsp;</label>\\n          <input  id=\\\"orderAmount\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  name=\\\"orderAmount\\\" [(ngModel)]=\\\"order.totalOrderAmount\\\"\\n                 #orderAmount=\\\"ngModel\\\">\\n                 <span class=\\\"help-block\\\" *ngIf=\\\"orderAmount.invalid && orderAmount.touched\\\">\\n                      Please enter Order Amount\\n                 </span>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"receivedAmount.invalid && receivedAmount.touched\\\">\\n            <label for=\\\"receivedAmount\\\" class=\\\"control-label\\\">Recieved Amount</label>\\n            <input  id=\\\"receivedAmount\\\" required  type=\\\"text\\\" class=\\\"form-control\\\" \\n                    name=\\\"receivedAmount\\\" [(ngModel)]=\\\"order.receivedAmount\\\"\\n                   #receivedAmount=\\\"ngModel\\\" (blur)=getPendingAmount(order)>\\n                   <span class=\\\"help-block\\\" *ngIf=\\\"receivedAmount.invalid && receivedAmount.touched\\\">\\n                        Please enter Order Amount\\n                   </span>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" class=\\\"text-primary\\\"  *ngIf=\\\"order?.receivedAmount\\\">\\n              <label for=\\\"receivedAmount\\\" class=\\\"control-label\\\">Pending Amount : </label>\\n             {{order?.totalOrderAmount}} -  {{order?.receivedAmount}} =  \\n             <span  class=\\\"form-control\\\" class=\\\"text-warning\\\" *ngIf=\\\"pendingAmount\\\">\\n               <strong>\\n                {{pendingAmount}} Rs\\n\\n               </strong>  </span> \\n                    \\n            </div>\\n          \\n        \\n        \\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"comments\\\">Comments</label>\\n          <input id=\\\"comments\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                 name=\\\"comments\\\" [(ngModel)]=\\\"order.comments\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\" >\\n                <label for=\\\"khataNumber\\\" >Khata Number</label>\\n                <input  id=\\\"khataNumber\\\"   type=\\\"text\\\" class=\\\"form-control\\\" \\n                        name=\\\"khataNumber\\\" [(ngModel)]=\\\"order.khataNumber\\\">\\n                      \\n              </div>\\n\\n\\n\\n    </div>\\n      <div class=\\\"panel-footer\\\">\\n       <button class=\\\"btn btn-primary\\\" [disabled]=\\\"submitClicked\\\"  type=\\\"submit\\\">Save</button>\\n    </div>\\n    <div class=\\\"panel-footer text-success\\\" *ngIf=\\\"successMessage\\\">\\n        {{successMessage}}\\n     </div>\\n     <div class=\\\"panel-footer text-danger\\\" *ngIf=\\\"errorResponse\\\">\\n        {{errorResponse}}\\n     </div>\\n     <div class=\\\"text-danger\\\" *ngIf=\\\"validationError\\\">\\n            {{validationError}}\\n         </div>\\n  </div>\\n</form> \\n\\n\\n\\n\\n<div class=\\\"modal \\\" tabindex=\\\"-1\\\" id=\\\"confirmationModal\\\"\\n  data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\" [ngStyle]=\\\"{'display':getDisplayObject()}\\\" >\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n  <div class=\\\"modal-content\\\">\\n        \\n                <div class=\\\"modal-header\\\">\\n          \\n                        <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                            &times;\\n                        </button>\\n                        <h4 class=\\\"modal-title\\\">Create Order Status</h4>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <div class=\\\"text-success\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"success_response\\\"> \\n                            <h4>{{success_response}}</h4> </div>\\n                           \\n                        <div class=\\\"text-error\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"errorResponseOnCreateOrder\\\">\\n                             <h4>{{errorResponseOnCreateOrder}}</h4></div>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"dismissModal()\\\" class=\\\"btn btn-info\\\" >Create one more Order</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                        (click)=\\\"dismissModalAndRedirect()\\\"   data-dismiss=\\\"modal\\\">Go to Order List</button>\\n                    </div>\\n      \\n  </div>\\n</div>\\n</div> \\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Order} from '../../models/order.model';\nimport { OrderService } from '../../services/order.service';\n\nimport {BaseResponse} from '../../models/baseResponse.model';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Items } from 'src/app/models/items.model';\n\n\n\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.css']\n})\nexport class CreateOrderComponent implements OnInit {\n\n\n  validationError;\n\n  baseResponse : BaseResponse;\n  success_response : string;\n  successMessage : string;\n  errorResponse : string;\n  errorResponseOnCreateOrder : string;\n  displayModalObject : string = 'none';\n  calculationLogic : string;\n  submitClicked=false;\n  totalOrderAmount=0;\n\n  pendingAmount : number ;\n  item = new Items();\n\n  itemContainers  =[];\n  //customerId : null;\n\n  availableItemType : string[] = [\n    \"Gold\", \"Silver\", \"Platinum\", \"Diamond\"\n  ];\n\n  itemQualityList : string[] = [\n    \"40\", \"50\", \"55\", \"60\", \"65\",\"70\", \"75\", \"80\", \"85\",\"90\",\"95\",\"99\"\n  ];\n\n  order : Order = {\n      orderId : null,\n      orderAmount : null,\n      dueDate: null,\n      itemType: null,\n      customerId: null,\n      comments: null,\n      status: null,\n      itemName : null,\n      itemQuality : null,\n      weight : null,\n      customerName : null,\n      customerCity : null,\n      createdDate : null,\n      khataNumber : null,\n      exchangeItemName : null,\n      exchangeItemQuality : null,\n      exchangeWeight : null,\n      receivedAmount : null,\n      discount : null,\n\n      itemsList:null,\n      totalOrderAmount:null\n\n\n  }\n\n  constructor(private _orderService : OrderService\n              ,private _activatedRoute : ActivatedRoute\n              ,private _router : Router) { }\n\n  ngOnInit() {\n\n   let customerIdName = this._activatedRoute.snapshot.paramMap.get('cutomerId');\n\n   \n   let customeIdNameSplitted : string[]  = customerIdName.split(\"-\");\n   let customerId = customeIdNameSplitted[0];\n   let customerName = customeIdNameSplitted[1];\n\n   this.order.customerId = parseInt(customerId);\n   this.order.customerName = customerName;\n   this.item = new Items();\n   this.itemContainers.push(this.item);\n  }\n\n  saveOrder(order : Order) {\n\n   let res = this.validateItemList();\n    if(res != ''){\n      this.validationError=res;\n      return;\n    } \n    if(!this.validateLoanData(order)){\n      return;\n    } \n    \n\n    this.submitClicked = true;\n    order.itemsList=this.itemContainers;\n    console.log(order)\n    this._orderService.saveOrderDetails(order).subscribe(\n      (paymentData : BaseResponse) => \n      {\n\n        if(paymentData.status=='SUCCESS' || paymentData.message=='SUCCESS'){\n          this.baseResponse = paymentData;\n          this.success_response= paymentData.message;\n          this.displayModalObject = 'block';\n        }else{\n          this.errorResponseOnCreateOrder =paymentData.message;\n        }\n        \n        \n      },\n      error => { this.handleError(error);\n        console.log(\"Some error occured while saving order details\")\n        this.errorResponseOnCreateOrder = JSON.stringify(error); \n      }\n      \n    )\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n     throw error;\n  };\n\n\n  getPendingAmount(order : Order){\n\n    let  orderAmount: number = order.totalOrderAmount;\n   let receivedAmount : number = order.receivedAmount;\n\n   \n    this.pendingAmount = (Number(orderAmount) - Number(receivedAmount));\n   \n  }\n\n\n   getDisplayObject() {\n   \n    return this.displayModalObject;\n\n }\n\n dismissModal()  {\n   this.displayModalObject = 'none';\n    window.location.reload;\n   return this.displayModalObject;\n }\n\n dismissModalAndRedirect(){\n   this._router.navigate(['/orderList'])\n }\n\n validateLoanData(order : Order) : boolean {\n  if(order == null){\n    this.validationError='Please enter order details';\n    return false;\n  }\n\n  /* if(order.itemName == null || order.itemName == ''){\n    this.validationError='Please enter itemName';\n    return false;\n  }\n  \n  if(order.itemType == null || order.itemType == ''){\n    this.validationError='Please select itemType';\n    return false;\n  }\n  if(order.weight == null || order.weight == 0){\n    this.validationError='Please enter weight';\n    return false;\n  }\n  if(order.itemQuality == null ){\n    this.validationError='Please enter itemQuality';\n    return false;\n  } */\n  if(order.dueDate == null ){\n    this.validationError='Please enter dueDate';\n    return false;\n  }\n  /* if(order.orderAmount == null || order.orderAmount == 0){\n    this.validationError='Please enter orderAmount';\n    return false;\n  } */\n  \n  \n  return true;\n}\n\nvalidateItemList() : string {\n  let respnse='';\n  let i =1;\n  this.itemContainers.forEach(function(itm){\n\n    if(itm.itemName == null ){\n      respnse='Please enter Item Name for item '+i;\n      return respnse;\n    }\n\n    if(itm.weight == null ){\n      respnse='Please enter Weight for item : '+i;\n      return respnse;\n    }\n    if(itm.marketRate == null ){\n      respnse='Please enter marketRate for item : '+i;\n    return respnse;\n    }\n    if(itm.makingCharge == null ){\n      this.validationError='Please enter makingCharge for item : '+i;\n    return respnse;\n    }\n    if(itm.itemPrice == null ){\n      respnse='Please enter order amount for Item '+i;\n      return respnse;\n    }\n\n   \n   i++;\n  }\n  \n  )\n  return respnse;\n}\n\n\ncalculateItemOrderAmount(itemObj : Items, i:number) {\n  let amount : number = 0;\n  let calculationLogicStr=\"\";\n  if(itemObj.itemType != null && (itemObj.itemType == 'Silver' || itemObj.itemType == 'silver')){\n    calculationLogicStr = 'Amount calculated for Silver rate '+itemObj.marketRate+' per Kg  for weight '+itemObj.weight + ' grams'; \n    itemObj.discount  = itemObj.discount !=null?itemObj.discount :0;\n    amount = (((itemObj.marketRate/1000)*itemObj.weight)+Number(itemObj.makingCharge))-itemObj.discount;\n    amount = Math.round(amount);\n  }else if (itemObj.itemType != null && (itemObj.itemType == 'Gold' || itemObj.itemType == 'gold')){\n    calculationLogicStr = 'Amount calculated for Gold rate '+itemObj.marketRate+' per 10 grams  for weight '+itemObj.weight + ' grams';\n    itemObj.discount  = itemObj.discount !=null?itemObj.discount :0;\n    amount = (((itemObj.marketRate/10)*itemObj.weight)+Number(itemObj.makingCharge))-itemObj.discount;\n    amount = Math.round(amount);\n  }\nthis.itemContainers[i].itemPrice=amount;\nthis.itemContainers[i].calculationLogicString=calculationLogicStr;\n //this.order.orderAmount=amount;\n\n}\n\ncalculateTotalOrderAmount(order){\n  let ordrAmnt:number=0;\n  this.itemContainers.forEach(function(itm){\n    if(itm.itemPrice != null && !isNaN(itm.itemPrice)){\n      ordrAmnt = ordrAmnt+parseInt(itm.itemPrice);\n      console.log('totalAmount is : '+ordrAmnt);\n      order.totalOrderAmount = ordrAmnt;\n    }\n   \n  }\n  \n  )\n \n}\n\n\n\naddMoreItems() {\n  console.log(JSON.stringify(this.itemContainers));\n  this.item = new Items();\n  this.itemContainers.push(this.item);\n}\n\ndeleteItems() {\n  this.itemContainers.pop();\n}\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  order-details-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-details-edit',\n  templateUrl: './order-details-edit.component.html',\n  styleUrls: ['./order-details-edit.component.css']\n})\nexport class OrderDetailsEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n <div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">Order Details</h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">           \\n\\n<div class=\\\"pannel panel-info\\\">\\n  <div class=\\\"panel-heading\\\">\\n   \\n      <span   style=\\\"color:rgb(27, 27, 83)\\\">Name  : </span><strong>{{orderDetail?.customerName}}</strong> \\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span  style=\\\"color:rgb(27, 27, 83)\\\">City :</span><strong> {{orderDetail?.customerCity}}</strong> \\n   \\n  </div>\\n\\n  <div class=\\\"panel-body\\\">\\n    <table class=\\\"table table-striped table-bordered table-hover table-condensed\\\">\\n      <tbody > \\n       <tr>\\n          <td>Order Id</td>\\n          <td class=\\\"text-primary\\\"> {{orderDetail?.orderId}}</td>\\n        </tr> \\n        <tr>\\n          <td>Khata Number</td>\\n          <td class=\\\"text-primary\\\"> {{orderDetail?.khataNumber}}</td>\\n        </tr> \\n       \\n        <tr>\\n            <td>Amount</td>\\n            <td class=\\\"text-primary\\\"> {{orderDetail?.orderAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n        </tr>\\n       <!--  <tr>\\n            <td>Making Charge</td>\\n            <td class=\\\"text-primary\\\"> {{orderDetail?.makingCharge | currency:'INR':'symbol':'4.2-2' }}</td>\\n        </tr> -->\\n        <tr>\\n            <td>Discount</td>\\n            <td class=\\\"text-primary\\\"> {{orderDetail?.discount | currency:'INR':'symbol':'4.2-2' }}</td>\\n        </tr>\\n        <tr>\\n            <td>Received Amount during order</td>\\n            <td class=\\\"text-primary\\\"> {{orderDetail?.receivedAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n        </tr>\\n        <tr *ngIf=\\\"!checkPaymentDetailsAvailable() && initialPendingAmount\\\">\\n                <td>Pending Amount</td>\\n                <td class=\\\"text-info\\\"><strong>{{initialPendingAmount| currency:'INR':'symbol':'4.2-2' }}</strong> </td>\\n         </tr>\\n         \\n        <tr>\\n            <td>Due Date</td>\\n            <td class=\\\"text-primary\\\"> {{orderDetail?.dueDate | date:\\\"dd/MM/yy\\\" }}</td>\\n        </tr>\\n          <!-- \\n        <tr>  \\n          <td>Item Type</td>\\n          <td class=\\\"text-primary\\\"> {{orderDetail?.itemType| lowercase}}</td>\\n        </tr>\\n      <tr>  \\n              <td>Item Name</td>\\n              <td class=\\\"text-primary\\\"> {{orderDetail?.itemName| lowercase}}</td>\\n          </tr>\\n      \\n\\n      <tr>  \\n          <td>Item Quality</td>\\n          <td class=\\\"text-primary\\\"> {{orderDetail?.itemQuality}}%</td>\\n      </tr> -->\\n      <tr>  \\n          <td>Order Placed on Date in (\\\"DD/MM/YY\\\")</td>\\n          <td class=\\\"text-primary\\\"> {{orderDetail?.createdDate | date:\\\"dd/MM/yy\\\" }}</td>\\n      </tr>\\n      <tr>  \\n          <td>Comment</td>\\n          <td class=\\\"text-primary\\\"> {{orderDetail?.comments| lowercase}}</td>\\n      </tr>\\n      <tr>  \\n      <tr [class.success]=\\\"orderDetail?.status=='Closed'\\\">  \\n              <td>Order Status</td>\\n              <td class=\\\"text-primary\\\"> {{orderDetail?.status}}</td>\\n        </tr>\\n\\n\\n      <tr *ngIf=\\\"orderDetail?.status=='OPEN'\\\">  \\n          <td colspan=\\\"2\\\" class=\\\"text-center\\\"><button class=\\\"btn btn-primary\\\" \\n              data-target=\\\"#paymentModal\\\"  data-toggle=\\\"modal\\\" >Add Payment</button> </td>\\n       \\n        </tr>\\n\\n      </tbody>\\n      </table>\\n      \\n      </div>\\n</div>\\n\\n<div class=\\\"pannel panel-info\\\" >\\n    <div class=\\\"panel-heading\\\">\\n       Order Item Details\\n      </div>\\n\\n    <div class=\\\"panel-body\\\"> \\n        <table class=\\\"table  table-bordered table-hover table-condensed\\\">\\n            <thead  class=\\\"table-bordered\\\">\\n              <th>Item Name</th>\\n              <th>Item Type</th>\\n              <th>Weight (grams)</th>\\n              <th>Discount</th>\\n              <th>Count</th>\\n              <th>Making Charge</th>\\n              <th>Item Price</th>\\n             \\n              \\n             \\n            </thead>\\n            <tbody > \\n            <tr *ngFor=\\\"let item of orderDetail?.itemsList\\\"  >  \\n                <td> {{item.itemName}}</td>\\n                <td> {{item.itemType }}</td>\\n                <td> {{item.weight || \\\"NA\\\"}}</td>\\n                <td> {{item.discount || \\\"NA\\\"}}</td>\\n                <td> {{item.count || \\\"1\\\"}}</td>\\n                <td> {{item.makingCharge || \\\"NA\\\"}}</td>\\n                <td> {{item.itemPrice || \\\"NA\\\"}}</td>\\n                \\n            </tr> \\n            \\n            </tbody>\\n        </table>\\n    </div> \\n</div>\\n\\n\\n<div class=\\\"pannel panel-info\\\" *ngIf=\\\"checkPaymentDetailsAvailable()\\\">\\n    <div class=\\\"panel-heading\\\">\\n       Order Payment Details\\n      </div>\\n\\n    <div class=\\\"panel-body\\\"> \\n        <table class=\\\"table  table-bordered table-hover table-condensed\\\">\\n            <thead  class=\\\"table-bordered\\\">\\n              <th>Payment Id</th>\\n              <th>Payment Amount</th>\\n              <th>Balance Amount</th>\\n              <th>Payment Date</th>\\n              <!-- <th>Payment Type</th> -->\\n              <th>Comment</th>\\n              \\n             \\n            </thead>\\n            <tbody > \\n            <tr *ngFor=\\\"let payment of orderPaymentDetailsList\\\" \\n            [class.text-success]=\\\"payment.paymentType=='Cash'\\\"\\n            [class.bg-success]=\\\"payment.balanceAmount=='0'\\\" >  \\n                <td> {{payment.orderPaymentId}}</td>\\n                <td> {{payment.partialPaymentAmount | currency:'INR':'symbol':'4.2-2'}}</td>\\n                <td> {{payment.balanceAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n                <td> {{payment.createdOn|  date:\\\"dd/MM/yy\\\"}}</td>\\n                <!-- <td> {{payment.paymentType | lowercase}}</td> -->\\n               \\n                <td> {{payment.comment }}</td>\\n                \\n               \\n            </tr> \\n            \\n            </tbody>\\n        </table>\\n    </div> \\n</div>\\n\\n <div class=\\\"modal fade\\\" tabindex=\\\"-1\\\" id=\\\"paymentModal\\\"\\n  data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n  <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n              &times;\\n          </button>\\n          <h4 class=\\\"modal-title\\\">Add Order Payment</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n          <form>\\n              \\n              <div class=\\\"form-group\\\" >\\n                          <label for=\\\"partialPaymentAmount\\\" class=\\\"control-label\\\">Payment Amount</label>\\n                          <input  id=\\\"partialPaymentAmount\\\" required  type=\\\"number\\\" class=\\\"form-control\\\" \\n                                  name=\\\"partialPaymentAmount\\\" [(ngModel)]=\\\"orderPayment.partialPaymentAmount\\\"\\n                                  #orderAmount=\\\"ngModel\\\">\\n                                 \\n              </div>\\n              <div class=\\\"form-group\\\">\\n                      <label for=\\\"comment\\\">Comments</label>\\n                      <input id=\\\"comment\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                             name=\\\"comment\\\" [(ngModel)]=\\\"orderPayment.comment\\\">\\n               </div>\\n               <div class=\\\"form-group\\\">\\n                      <label for=\\\"createdOn\\\" class=\\\"control-label\\\">Payment Date</label>\\n                      <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n                      <div class=\\\"form-control\\\" >\\n                          <app-date-picker [(ngModel)]=\\\"orderPayment.createdOn\\\"  name=\\\"createdOn\\\"> </app-date-picker>\\n                      </div>\\n                    </div>\\n              <div class=\\\"form-group\\\" >\\n                      <label for=\\\"paymentType\\\" class=\\\"control-label\\\">Partial Payment</label>\\n                      <select [(ngModel)]=\\\"orderPayment.paymentType\\\" name=\\\"paymentType\\\" id=\\\"paymentType\\\" class=\\\"form-control\\\" >\\n                        <option value=\\\"\\\" disabled selected>select a category</option>\\n                        <option *ngFor=\\\"let paymentType of paymentTypeList\\\" [value]=\\\"paymentType\\\">{{paymentType}}</option>\\n                      </select>\\n              </div>\\n             \\n          </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPayment(orderPayment)\\\">Save</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                  data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n      <div class=\\\"text-success\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"success_response\\\"> \\n          <h4>{{success_response}}</h4> </div>\\n         \\n      <div class=\\\"text-error\\\" style=\\\"align-content: center\\\"  *ngIf=\\\"errorResponseOnPayment\\\">\\n           <h4> {{errorResponseOnPayment}} </h4></div>\\n  </div>\\n</div>\\n</div> \\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OrderService} from '../../services/order.service';\nimport {Order} from '../../models/order.model';\nimport {OrderPayment} from '../../models/orderPayment.model';\nimport {BaseResponse} from '../../models/baseResponse.model';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n\n\n  initialPendingAmount;\n  baseResponse : BaseResponse;\n\n  orderPaymentDetailsList : OrderPayment[];\n\n  success_response;\n  errorResponseOnPayment;\n  orderPayment : OrderPayment = {\n    orderId : null,\n    partialPaymentAmount : null,\n    balanceAmount : null,\n    orderPaymentId : null,\n\t  dueDate : null,\n    comment : null,\n    paymentType : \"Cash\",\n    \n    \n  };\n  \n  paymentTypeList: string[] = [\"Cash\",\"Card\",\"Paytm\",\"Cheque\",\"Ohter\"];\n  \n  orderDetail : Order;\n\n  constructor(private _orderService : OrderService, private _route : ActivatedRoute\n    , private _router : Router) { }\n\n  ngOnInit() {\n    let orderId = this._route.snapshot.paramMap.get('id');\n\n    this._orderService.getOrderDetails(orderId).subscribe(\n      (\n        res) => {\n          if(res != null){\n            this.orderDetail = res;\n            this.calculatePendingAmount(res);\n          }\n          \n         \n        },\n        error =>{\n          console.log('some error occurred while getting order details')\n        }\n        \n    )\n   \n    this.getOrderPaymentDetails( orderId);\n   \n    console.log('Order details '+this.orderDetail)\n  }\n\n  savePartialPayment(payment : OrderPayment){\n    payment.orderId = this.orderDetail.orderId;\n    console.log(payment);\n    this._orderService.saveOrderPayment(payment).subscribe(\n      (paymentData : BaseResponse) => \n      {\n        this.baseResponse = paymentData;\n        this.success_response= paymentData.message;\n        window.location.reload();\n      },\n      error => { this.handleError(error);\n        console.log(\"Some error occured while saving order details\")\n        this.errorResponseOnPayment = JSON.stringify(error); \n      }\n    )\n  }\n\n  getOrderPaymentDetails(orderId : string){\n    \n    //console.log(' orderId in getOrderPaymentDetails '+orderId)\n    this._orderService.getPaymentDetailsByOrderId(orderId)\n                      .subscribe(\n                        (orderPaymentsData) => \n                        {\n                          this.orderPaymentDetailsList = orderPaymentsData;\n                        },\n                  error => {\n                        this.handleError(error);\n                        console.log(\"Some error occured while saving order details\")\n                        this.errorResponseOnPayment = JSON.stringify(error); \n      }\n\n                      )\n  }\n\n\n\n  checkPaymentDetailsAvailable(): boolean {\n\n    if (typeof this.orderPaymentDetailsList !== 'undefined' && this.orderPaymentDetailsList.length > 0) {\n\n      console.log(\"inside checkPaymentDetailsAvailable\" +this.checkPaymentDetailsAvailable.length)\n     // this.currLoanAmount = this.loanPaymentDetailsList[this.loanPaymentDetailsList.length - 1].balanceAmount;\n      return true;\n    } else {\n      return false;\n    }\n    \n  }\n\n  calculatePendingAmount(orderData : Order){\n    if(orderData != null){\n      //console.log('Inside calculate Pending amount' + orderData.receivedAmount);\n      //let makingCharge = orderData.makingCharge != null?orderData.makingCharge:0;\n      //let discount = orderData.discount != null ?orderData.discount:0;\n      let receivedAmount = orderData.receivedAmount != null ?orderData.receivedAmount:0;\n      let pendingAmount =(\n                          Number(orderData.totalOrderAmount))\n                           -(+Number(receivedAmount)\n                           );\n      this.initialPendingAmount = pendingAmount;\n    }\n    \n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n     throw error;\n  };\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  order-item-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-item-details',\n  templateUrl: './order-item-details.component.html',\n  styleUrls: ['./order-item-details.component.css']\n})\nexport class OrderItemDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n\\n    <div style=\\\"float: right;\\\">\\n        <form #searchEmployeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"searchOrders(searchString)\\\">\\n          <table class=\\\"table-condensed\\\">\\n            <tr>\\n              <td>\\n                <div style=\\\"color:aquamarine\\\" *ngIf=\\\"filterInfo\\\">Showing result with filter : {{searchString}} </div>\\n              </td>\\n              <td style=\\\"cursor: pointer;\\\">\\n                <div style=\\\"color:rgb(222, 224, 236)\\\" *ngIf=\\\"filterInfo\\\" (click)=clearFilter()>\\n                  <span id=\\\"searchclear\\\" class=\\\"glyphicon glyphicon-remove-circle\\\"> </span>Clear Filter </div>\\n              </td>\\n    \\n              <td>\\n                <div class=\\\"text-danger\\\" class=\\\"bg-danger\\\" *ngIf=\\\"emptySearchString\\\"> {{emptySearchString}} </div>\\n              </td>\\n              <td class=\\\"mx-auto\\\">\\n                <div>\\n                  <input type=\\\"text\\\" name=\\\"searchString\\\" required placeholder=\\\"Search Orders\\\" [(ngModel)]=\\\"searchString\\\">\\n                </div>\\n    \\n              </td>\\n    \\n              <td>\\n                <button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">Search</button>\\n              </td>\\n    \\n            </tr>\\n          </table>\\n        </form>\\n      </div>\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">Orders List : <strong style=\\\"color:aquamarine\\\"> {{totalRecords}} records found</strong></h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-responsive table-bordered table-hover table-condensed\\\">\\n          <thead >\\n            <th>Khata No</th>\\n            <th>Name</th>\\n            <th>Amount</th>\\n            <th>Due Date</th>\\n            <!-- <th>Item Type</th> -->\\n            <!-- <th>Rate Of Intrest</th> -->\\n            <!-- <th>Comments</th> -->\\n            <th>Status</th>\\n           <!--  <th>Item</th> -->\\n            <!-- <th>Quality</th> -->\\n           <!--  <th>Weight</th>  -->\\n            <th>More Detail</th> \\n            <th>New Order</th>\\n          </thead>\\n          <tbody > \\n          <tr *ngFor=\\\"let order of orderList\\\" [class.bg-success]=\\\"order.status=='Closed'\\\"\\n          [class.text-success]=\\\"order.status=='Closed'\\\" >  \\n              <td> {{order.khataNumber}}</td>\\n              <td> <a routerLink=\\\"/customerDetails/{{order.customerId}}\\\" routerLinkActive=\\\"active\\\">{{order.customerName}}</a></td>\\n              <td> {{order.orderAmount | currency:'INR':'symbol':'4.2-2' }}</td>\\n              <td> {{order.dueDate | date:\\\"dd/MM/yy\\\" }}</td>\\n              <!-- <td> {{loan.itemType| uppercase}}</td> -->\\n              <!-- <td> {{loan.rateOfInterest}} %</td> -->\\n              <!-- <td> {{loan.comments}}</td> -->\\n              <td > {{order.status | lowercase }}</td>\\n            <!--   <td> {{order.itemName}}</td> -->\\n              <!-- <td> {{loan.itemQuality }}%</td> -->\\n            <!--   <td> {{order.weight}}g</td> -->\\n              <td style=\\\"cursor: pointer;\\\">\\n                 <div class=\\\"text-primary\\\" (click)=\\\"getOrderDetails(order.orderId)\\\">Details</div></td>\\n              <td style=\\\"cursor: pointer;\\\"> \\n                <div class=\\\"text-primary\\\" (click)=createOrderForCustomer(order.customerId,order.customerName)>\\n                 <span class=\\\"glyphicon glyphicon-plus\\\"></span> Create Order </div></td>\\n          </tr>\\n          </tbody>\\n       </table>\\n\\n       \\n           <!-- pager -->\\n    <div>\\n        <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n                <a (click)=\\\"setPage(1)\\\">First</a>\\n            </li>\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\">\\n                <a (click)=\\\"setPage(pager.currentPage - 1)\\\">Previous</a>\\n            </li>\\n            <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\">\\n                <a (click)=\\\"setPage(page)\\\">{{page}}</a>\\n            </li>\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n                <a (click)=\\\"setPage(pager.currentPage + 1)\\\">Next</a>\\n            </li>\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\">\\n                <a (click)=\\\"setPage(pager.totalPages)\\\">Last</a>\\n            </li>\\n        </ul>  \\n    </div>\\n  </div>\\n  </div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Order} from '../../models/order.model';\nimport {OrderService} from '../../services/order.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PagerService} from '../../services/pagerService.service';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit {\n\n  orderList : Order[];\n\n  todaysDate : Date = new Date();\n\n  errorResponse;\n  totalRecords;\n  perPage;\n  \n  currentPage = 1;\n   // pager object\n   pager: any = {};\n \n   // paged items\n   pagedItems: any[];\n\n   emptySearchString:any;\n   searchString;\n  filterInfo: boolean;\n  errorResponseOnSearch;\n  noSearchResultFound;\n  \n \n\n\n  constructor(private _orderService : OrderService\n            , private _router : Router\n            , private pagerService: PagerService) { }\n\n  ngOnInit() {\n\n   this.getOrderListDetials(1, 10)\n    \n  }\n\n  getOrderListDetials(pageNum, perPage){\n\n    this._orderService.getOrderList(pageNum, perPage).subscribe(\n     // (orderData)=> this.orderList = orderData\n     res => {\n      console.log(res);\n      if(res != null){\n        \n        if(res.status == 'SUCCESS'){\n          this.orderList = res.data;\n          this.totalRecords = res.totalCount;\n          console.log('totalRecords is '+this.totalRecords)\n          this.perPage = res.perPage;\n          // initialize to page 1\n          this.setPageOnLoad(res.pageNumber, res.totalCount);\n        }else{\n          this.errorResponse = res.message;\n        }\n      }\n     \n    },\n    err => {\n      this.errorResponse = JSON.stringify(err.message);\n      console.log(err)\n    }\n      \n      );\n  }\n\n\n  getOrderDetails(id){\n    this._router.navigate(['/orderDetails', id]);\n }\n\n createOrderForCustomer(custId, custName){\n  this._router.navigate(['/createOrder', custId+'-'+custName]);\n}\n\nsetPageOnLoad(page: number, totalCount : number) {\n  if (page < 1 || page > this.pager.totalPages) {\n      return;\n  }\n\n  // get pager object from service\n  this.pager = this.pagerService.getPager(totalCount, page, this.perPage);\n  this.currentPage = page;\n  //console.log('Current page is : '+page);\n  // get current page of items\n  this.pagedItems = this.orderList.slice(this.pager.startIndex, this.pager.endIndex + 1);\n}\n\nsetPage(page: number) {\n  if (page < 1 || page > this.pager.totalPages) {\n      return;\n  }\n\n  // get pager object from service\n  this.pager = this.pagerService.getPager(this.totalRecords, page, this.perPage);\n  this.currentPage = page;\n  //console.log('Current page is : '+page);\n  // get current page of items\n  if(this.searchString != null){\n    this.searchOrders(this.searchString);\n  }else{\n    this.getOrderListDetials(page, 10);\n  }\n   \n  \n  this.pagedItems = this.orderList.slice(this.pager.startIndex, this.pager.endIndex + 1);\n}\n\n\n\n\n\nsearchOrders(searchString : string){\n  if(searchString == null || searchString ==''){\n    this.emptySearchString = \"Please enter any name to search.\"\n\n    return;\n  }\n  this.emptySearchString = null;\n  this._orderService.searchOrders(searchString, this.currentPage, this.perPage).subscribe(\n    \n    res => {\n      console.log(res);\n      if(res != null){\n        \n        if(res.status == 'SUCCESS'){\n          this.orderList = res.data;\n          this.totalRecords = res.totalCount;\n          this.noSearchResultFound = null;\n          this.filterInfo = true;\n          this.perPage = res.perPage;\n          // initialize to page 1\n          this.setPageOnLoad(res.pageNumber, res.totalCount);\n        }else{\n          this.errorResponse = res.message;\n        }\n      }\n     \n    },\n    err => {\n      this.errorResponseOnSearch = JSON.stringify(err);  \n      console.log(err)\n    }\n\n  )\n \n  \n}\n\n/* To clear serch filters*/\nclearFilter(){\n  this.getOrderListDetials(this.currentPage, 10);\n  this.searchString = null;\n  this.filterInfo = false;\n}\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { environment } from '../..//environments/environment';\n\n\nimport { BaseResponse } from '../models/baseResponse.model';\n\nconst httpOptions = {\n  headers: {\n    'Content-Type':  'application/json',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Request-Methods':'OPTIONS, GET, PUT, PATCH, DELETE',\n    'Access-Control-Allow-Methods': 'OPTIONS, GET, PUT, PATCH, DELETE',\n    'Access-Control-Allow-Headers': 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type',\n    //'Access-Control-Allow-Credentials':'true'\n  },\n  //withCredentials: true\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseUrl = environment.apiUrl;\n  \n\n  constructor(private http: HttpClient,\n              private _router: Router) { }\n\n  \n\n  loginUser(user) {\n    console.log(httpOptions)\n    return this.http.post<any>( this.baseUrl+'/login', user,  httpOptions);\n  }\n\n  loggedIn() : boolean {\n    return !!localStorage.getItem('token');\n  }\n\n  logoutUser() : void {\n   \n    localStorage.removeItem('token')\n    localStorage.removeItem('userName')\n    \n    \n    this._router.navigate(['/home'])\n  }\n\n  getToken() {\n    return localStorage.getItem('token')\n  }\n\n  getUserName() : string {\n    return localStorage.getItem('userName')\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {Customer} from '../models/customer.model';\nimport { Response} from '@angular/http';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { map,catchError, filter, switchMap } from 'rxjs/operators';\nimport {Http} from '@angular/http';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { environment } from '../..//environments/environment';\n\n\n\n\nconst httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n    })\n  };\n\n@Injectable()\nexport class CustomerService{\n//private apiUrl = 'http://ec2-18-188-183-35.us-east-2.compute.amazonaws.com/CounterWebApp/';\n//private apiUrl = 'http://localhost:8080/CounterWebApp/';\nbaseUrl = environment.apiUrl;\n\n\nconstructor(private _http : Http, private _httpClient: HttpClient\n        , private _router : Router){\n    \n}\n\ngetCustomers() : Observable<Customer[]>  {\n    return this._httpClient.get<Customer[]>(this.baseUrl+'customers')\n    .pipe(\n     // retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError) // then handle the error\n    );\n};\n\ngetCustomersWithPagination(pageNo : number, perPage : number) : Observable<any>  {\n  return this._httpClient.get<Customer[]>(this.baseUrl\n    +'customersList?pageNumber='+pageNo+'&perPage='+perPage)\n  .pipe(\n   // retry(3), // retry a failed request up to 3 times\n    catchError(this.handleError) // then handle the error\n  );\n};\n\nsearchCustomers(searchString: string, pageNo : number, perPage : number) : Observable<any>  {\n  return this._httpClient.get<Customer[]>(this.baseUrl+'searchCustomer/'+searchString\n  +'?pageNumber='+pageNo+'&perPage='+perPage)\n  .pipe(\n   // retry(3), // retry a failed request up to 3 times\n    catchError(this.handleError) // then handle the error\n  );\n};\n\ngetCustomerDetailsById(custId : String) : Observable<Customer>  {\n  return this._httpClient.get<Customer>(this.baseUrl+'customers/'+custId)\n  .pipe(\n   // retry(3), // retry a failed request up to 3 times\n    catchError(this.handleError) // then handle the error\n  );\n};\n\nsaveCustomer(customer :Customer) : any {\n  \n  return this._httpClient.post(this.baseUrl+'registerCustomer', customer, httpOptions)\n  .pipe(\n   \n    catchError(this.handleError)\n  );\n\n}\n\nprivate handleError(error: HttpErrorResponse) {\n  if (error.error instanceof ErrorEvent) {\n    // A client-side or network error occurred. Handle it accordingly.\n    console.error('An error occurred:', error.error.message);\n  } else {\n    // The backend returned an unsuccessful response code.\n    // The response body may contain clues as to what went wrong,\n    console.error(\n      `Backend returned code ${error.status}, ` +\n      `body was: ${error.error}`);\n  }\n  // return an observable with a user-facing error message\n  return throwError(\n    'Something bad happened; please try again later.');\n};\n\n\n}","import { Injectable } from \"@angular/core\";\nimport {Loan} from '../models/loan.model';\nimport {LoanPayment} from '../models/loanPayment.model'\nimport { Response} from '@angular/http';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport { Observable, throwError} from 'rxjs';\nimport { map,catchError, filter, switchMap } from 'rxjs/operators';\nimport {Http} from '@angular/http';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport {InterestResponse} from '../models/interestResponse.model';\nimport { environment } from '../..//environments/environment';\nimport {BaseResponse} from '../models/baseResponse.model';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n     })\n  };\n\n\n@Injectable()\nexport class LoanService{\n\n  baseUrl = environment.apiUrl;\n\n  //private apiUrl = 'http://ec2-18-188-183-35.us-east-2.compute.amazonaws.com/CounterWebApp/';\n\n  //private apiUrl = 'http://localhost:8080/CounterWebApp/';\n\n   getLoanUrl = this.baseUrl+'loan';\n\n   getLoanPaymentUrl = this.baseUrl+'loanPartialPayment/';\n\n   getCustomerLoanUrl = this.baseUrl+'loanDetailsByCustomerId/';\n\n\n   \n\n   \nconstructor(private _http : Http, private _httpClient: HttpClient){\n    \n}\n\ngetLoanList(pageNum, perPage) : Observable<any>  {\n    return this._http.get(this.getLoanUrl+'?pageNumber='+pageNum+'&perPage='+perPage)\n    .pipe(map((response : Response) => <any>response.json()));\n};\n\ngetCustomerLoanList(customerId: string) : Observable<Loan[]>  {\n  console.log('jhfginside loanlist  s')\n  return this._http.get(this.getCustomerLoanUrl.concat(customerId))\n  .pipe(map((response : Response) => <Loan[]>response.json()));\n};\n\n\n\nsaveLoan(loan :Loan) : Observable<BaseResponse> {\n  console.log(JSON.stringify(loan))\n    return this._httpClient.post<BaseResponse>(this.getLoanUrl, loan, httpOptions);\n  };\n\n  updateLoan(loan :Loan) : Observable<BaseResponse> {\n    console.log(JSON.stringify(loan))\n      return this._httpClient.put<BaseResponse>(this.getLoanUrl, loan, httpOptions);\n    };\n\n  saveLoanPayment(loanPayment :LoanPayment) : Observable<any> {\n    return this._httpClient.post<LoanPayment>(this.baseUrl.concat('loanPartialPayment'), loanPayment, httpOptions, ) ;\n  };\n\n  getLoanDetail(id : string) : Observable<Loan>  {\n    return this._http.get(this.getLoanUrl.concat('/'+id))\n    .pipe(map((response : Response) => <Loan>response.json()));\n  };\n\n  getLoanPaymentDetailList(id : string) : Observable<LoanPayment[]>  {\n    return this._http.get(this.getLoanPaymentUrl.concat('/'+id))\n    .pipe(map((response : Response) => <LoanPayment[]>response.json()));\n  };\n\n  getInterest(id : string, date : Date) : Observable<InterestResponse>  {\n    return this._http.get(this.baseUrl.concat('/interest/'+id))\n    .pipe(map((response : Response) => <InterestResponse>response.json()));\n  };\n\n\n  searchLoans(searchString: string, pageNo : number, perPage : number) : Observable<any>  {\n    return this._httpClient.get<Loan[]>(this.baseUrl+'searchLoans/'+searchString\n    +'?pageNumber='+pageNo+'&perPage='+perPage)\n    .pipe(\n     // retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError) // then handle the error\n    );\n  };\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError} from 'rxjs';\nimport { map,catchError, filter, switchMap } from 'rxjs/operators';\nimport {Http} from '@angular/http';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { HttpErrorHandler, HandleError } from '../http-error-handler.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Order} from '../models/order.model';\nimport { Response} from '@angular/http';\nimport {OrderPayment} from '../models/orderPayment.model';\nimport { BaseResponse } from '../models/baseResponse.model';\nimport { environment } from '../..//environments/environment';\n\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n   })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  baseUrl = environment.apiUrl;\n\n  //private apiUrl = 'http://ec2-18-188-183-35.us-east-2.compute.amazonaws.com/CounterWebApp/';\n\n  //private apiUrl = 'http://localhost:8080/CounterWebApp/';\n\n  constructor(private _http : Http, private _httpClient: HttpClient) {\n\n   }\n\n   getOrderList(pageNumber, perPage) : Observable<any>  {\n    return this._http.get(this.baseUrl+'/order?pageNumber='+pageNumber+'&perPage='+perPage)\n    .pipe(map((response : Response) => <any>response.json()));\n    };\n\n    getOrderListForCustomer(customerId : string, customerName : string) : Observable<Order[]>  {\n      return this._http.get(this.baseUrl+'/orderDetailsByCustomer?customerId='+customerId\n                            +\"&customerName=\"+customerName)\n      .pipe(map((response : Response) => <Order[]>response.json()));\n      };\n\n    getOrderDetails(id : string) : Observable<Order>  {\n      console.log('invoking order details api for id : '+id);\n      return this._http.get(this.baseUrl.concat('/order/'+id))\n      .pipe(map((response : Response) => <Order>response.json()));\n    };\n\n    saveOrderPayment(orderPayment :OrderPayment) : Observable<BaseResponse> {\n      return this._httpClient.post<BaseResponse>(this.baseUrl.concat('orderPayment'), orderPayment, httpOptions ) ;\n    };\n\n    getPaymentDetailsByOrderId(orderId : string) : Observable<OrderPayment[]>{\n\n      return this._http.get(this.baseUrl+'orderPayment/'+orderId)\n      .pipe(map((response : Response) =>  <OrderPayment[]>response.json()))\n    }\n\n    saveOrderDetails(order : Order): Observable<BaseResponse> {\n\n      return this._httpClient.post<BaseResponse>(this.baseUrl+'order', order, httpOptions);\n    }\n\n    updateOrderDetails(order : Order): Observable<BaseResponse> {\n\n      return this._httpClient.put<BaseResponse>(this.baseUrl+'order', order, httpOptions);\n    }\n  \n\n    \n    searchOrders(searchString: string, pageNo : number, perPage : number) : Observable<any>  {\n      return this._httpClient.get<Order[]>(this.baseUrl+'searchOrder/'+searchString\n      +'?pageNumber='+pageNo+'&perPage='+perPage)\n      .pipe(\n       // retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError) // then handle the error\n      );\n    };\n\n    private handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(\n          `Backend returned code ${error.status}, ` +\n          `body was: ${error.error}`);\n      }\n      // return an observable with a user-facing error message\n      return throwError(\n        'Something bad happened; please try again later.');\n    };\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'underscore-node';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagerService {\n\n  getPager(totalItems: number, currentPage: number, pageSize: number) {\n    // calculate total pages\n    let totalPages = Math.ceil(totalItems / pageSize);\n    console.log('total pages are '+totalPages)\n    let startPage: number, endPage: number;\n    // if (totalPages <= 10) {\n    //     // less than 10 total pages so show all\n    //     startPage = 1;\n    //     endPage = totalPages;\n    // } else {\n    //     // more than 10 total pages so calculate start and end pages\n    //     if (currentPage <= 6) {\n    //         startPage = 1;\n    //         endPage = 10;\n    //     } else if (currentPage + 4 >= totalPages) {\n    //         startPage = totalPages - 9;\n    //         endPage = totalPages;\n    //     } else {\n    //         startPage = currentPage - 5;\n    //         endPage = currentPage + 4;\n    //     }\n    // }\n    \n    if (totalPages <= 5) {\n        startPage = 1;\n        endPage = totalPages;\n    } else {\n        if (currentPage <= 3) {\n            startPage = 1;\n            endPage = 5;\n        } else if (currentPage + 1 >= totalPages) {\n            startPage = totalPages - 4;\n            endPage = totalPages;\n        } else {\n            startPage = currentPage - 2;\n            endPage = currentPage+2;\n        }\n    }\n\n    // calculate start and end item indexes\n    let startIndex = (currentPage - 1) * pageSize;\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    let pages = _.range(startPage, endPage + 1);\n\n    // return object with all pager properties required by the view\n    return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n    };\n}\n}\n","module.exports = \"\\n\\n  <input class=\\\"form-control\\\" \\n               placeholder=\\\"dd/mm/yyyy\\\"\\n               name=\\\"dp\\\" \\n               [(ngModel)]=\\\"selectedDate\\\"\\n               ngbDatepicker #d=\\\"ngbDatepicker\\\"\\n               (change)=\\\"onDateChange($event.target.value)\\\"\\n               (dateSelect)=\\\"onDateSelect($event)\\\"\\n               class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\">\\n      \\n   \\n  \"","\n\nimport { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, } from '@angular/forms';\n\nexport const DATEPICKER_VALUE_ACCESSOR =  {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DatePickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [DATEPICKER_VALUE_ACCESSOR]\n})\nexport class DatePickerComponent implements ControlValueAccessor {\n\n  selectedDate: any;\n  disabled = false;\n\n  // Function to call when the date changes.\n  onChange = (date?: Date) => {};\n\n  // Function to call when the date picker is touched\n  onTouched = () => {};\n\n  writeValue(value: Date) {\n    if (!value) return;\n    this.selectedDate = {\n      year: value.getFullYear(),\n      month: value.getMonth(),\n      day: value.getDate()\n    }\n  }\n\n  registerOnChange(fn: (date: Date) => void): void {\n    this.onChange = fn;\n  }\n\n  // Allows Angular to register a function to call when the input has been touched.\n  // Save the function as a property to call later here.\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  // Allows Angular to disable the input.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Write change back to parent\n  onDateChange(value: Date) {\n    this.onChange(value);\n  }\n\n  // Write change back to parent\n  onDateSelect(value: any) {\n    this.onChange(new Date(value.year, value.month - 1, value.day));\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //apiUrl : \"http://localhost:8080/\"\n   apiUrl : \"http://localhost:8080/CounterWebApp/\"\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}